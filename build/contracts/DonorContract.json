{
  "contractName": "DonorContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "medicalID",
          "type": "string"
        }
      ],
      "name": "DonorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donorAddress",
          "type": "address"
        }
      ],
      "name": "DonorRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donorAddress",
          "type": "address"
        }
      ],
      "name": "DonorVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "organ",
          "type": "string"
        }
      ],
      "name": "MatchFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "medicalID",
          "type": "string"
        }
      ],
      "name": "PatientRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        }
      ],
      "name": "PatientRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "patientAddress",
          "type": "address"
        }
      ],
      "name": "PatientVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MEDICAL_PRO_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "organViabilityTimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "addMedicalProfessional",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proAddress",
          "type": "address"
        }
      ],
      "name": "removeMedicalProfessional",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "medicalID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "organ",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "region",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        }
      ],
      "name": "addDonor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "medicalID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "organNeeded",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "region",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "enum DonorContract.UrgencyLevel",
          "name": "urgency",
          "type": "uint8"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "donorAddr",
          "type": "address"
        }
      ],
      "name": "verifyDonor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patientAddr",
          "type": "address"
        }
      ],
      "name": "verifyPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "donorAddr",
          "type": "address"
        }
      ],
      "name": "rejectDonor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patientAddr",
          "type": "address"
        }
      ],
      "name": "rejectPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "organs",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "times",
          "type": "uint256[]"
        }
      ],
      "name": "initializeOrganViabilityTimes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "donorAddr",
          "type": "address"
        }
      ],
      "name": "getDonorByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "donorAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "medicalID",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "organ",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "region",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                }
              ],
              "internalType": "struct DonorContract.Location",
              "name": "location",
              "type": "tuple"
            },
            {
              "internalType": "enum DonorContract.VerificationStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "registrationTime",
              "type": "uint256"
            },
            {
              "internalType": "enum DonorContract.BadgeType",
              "name": "badge",
              "type": "uint8"
            }
          ],
          "internalType": "struct DonorContract.Donor",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patientAddr",
          "type": "address"
        }
      ],
      "name": "getPatientByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "patientAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "medicalID",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "organNeeded",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "region",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                }
              ],
              "internalType": "struct DonorContract.Location",
              "name": "location",
              "type": "tuple"
            },
            {
              "internalType": "enum DonorContract.UrgencyLevel",
              "name": "urgency",
              "type": "uint8"
            },
            {
              "internalType": "enum DonorContract.VerificationStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "registrationTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct DonorContract.Patient",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "matchDonorsAndPatients",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"medicalID\",\"type\":\"string\"}],\"name\":\"DonorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donorAddress\",\"type\":\"address\"}],\"name\":\"DonorRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donorAddress\",\"type\":\"address\"}],\"name\":\"DonorVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"organ\",\"type\":\"string\"}],\"name\":\"MatchFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"medicalID\",\"type\":\"string\"}],\"name\":\"PatientRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"}],\"name\":\"PatientRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"}],\"name\":\"PatientVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEDICAL_PRO_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"medicalID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organ\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"name\":\"addDonor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addMedicalProfessional\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"medicalID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organNeeded\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"enum DonorContract.UrgencyLevel\",\"name\":\"urgency\",\"type\":\"uint8\"}],\"name\":\"addPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"donorAddr\",\"type\":\"address\"}],\"name\":\"getDonorByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"donorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicalID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organ\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct DonorContract.Location\",\"name\":\"location\",\"type\":\"tuple\"},{\"internalType\":\"enum DonorContract.VerificationStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"},{\"internalType\":\"enum DonorContract.BadgeType\",\"name\":\"badge\",\"type\":\"uint8\"}],\"internalType\":\"struct DonorContract.Donor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patientAddr\",\"type\":\"address\"}],\"name\":\"getPatientByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicalID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organNeeded\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct DonorContract.Location\",\"name\":\"location\",\"type\":\"tuple\"},{\"internalType\":\"enum DonorContract.UrgencyLevel\",\"name\":\"urgency\",\"type\":\"uint8\"},{\"internalType\":\"enum DonorContract.VerificationStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct DonorContract.Patient\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"organs\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"times\",\"type\":\"uint256[]\"}],\"name\":\"initializeOrganViabilityTimes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matchDonorsAndPatients\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"organViabilityTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"donorAddr\",\"type\":\"address\"}],\"name\":\"rejectDonor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patientAddr\",\"type\":\"address\"}],\"name\":\"rejectPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proAddress\",\"type\":\"address\"}],\"name\":\"removeMedicalProfessional\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"donorAddr\",\"type\":\"address\"}],\"name\":\"verifyDonor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patientAddr\",\"type\":\"address\"}],\"name\":\"verifyPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DonorContract.sol\":\"DonorContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/contracts/DonorContract.sol\":{\"keccak256\":\"0x0acbbc0b69d0c851a77854105f1d4d827de6a13e8b33deef74209000b4be5fae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0321872d140a7d51439399a8c848bd554a42866a3ff71d20909ffdd3b6d86e61\",\"dweb:/ipfs/QmdmLHxqwAwQgBdaaBEkHsCTXXdaCP1W2eAfivs9HvDRTr\"]}},\"version\":1}",
  "bytecode": "0x6080604081815234620000e8575f808052602091818352808220338352835260ff818320541615620000b1575b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177592838352828152818320338452815260ff82842054161562000077575b61347b8581620000ed8239f35b83835282815281832090338452528120600160ff1982541617905533915f8051602062003568833981519152339280a45f8080806200006a565b8180528183528082203383528352808220600160ff198254161790553333835f80516020620035688339815191528180a46200002c565b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714612b8e575080631414f2fd14611dfa578063248a9ca314611dce57806326a9c75414611bf25780632c9365fa14611aad5780632cc5329a146119955780632f2ff15d1461190357806336568abe146118715780634959a52f14611827578063506af7e2146116f057806375b238fc146116c95780638cd19dd81461166d57806391d14854146116255780639ebfe0181461154f578063a217fddf14611535578063a74f0920146113f8578063ba5c0335146112bb578063c756d5a714611176578063cc1e343d14610f50578063d547741f14610f12578063e58f0227146101395763ef33a8971461010e575f80fd5b34610135575f3660031901126101355760206040515f805160206133e68339815191528152f35b5f80fd5b346101355760c0366003190112610135576004356001600160401b03811161013557610169903690600401612c3a565b6024356001600160401b03811161013557610188903690600401612c3a565b6044356001600160401b038111610135576101a7903690600401612c3a565b6064356001600160401b038111610135576101c6903690600401612c3a565b906084356001600160401b038111610135576101e6903690600401612c3a565b9060a43591600483101561013557335f908152600360205260409020546001600160a01b0316610ed057610256936040519261022184612be1565b8352602083015260408201526040519361023a85612bfc565b3385528560208601526040850152606084015260808301613161565b5f60a082018190524260c0830152338152600360209081526040909120825181546001600160a01b0319166001600160a01b03919091161781559082015180519093906001600160401b03811161080c576102b46001840154613111565b601f8111610e8c575b506020601f8211600114610e215781929394955f92610e16575b50508160011b915f199060031b1c19161760018301555b604083015180519093906001600160401b03811161080c576103136002850154613111565b601f8111610dd2575b506020601f8211600114610d675781929394955f92610d5c575b50508160011b915f199060031b1c19161760028401555b606081015180518051906001600160401b03821161080c5781906103746003880154613111565b601f8111610d0c575b50602090601f8311600114610c9e575f92610c93575b50508160011b915f199060031b1c19161760038501555b60208101518051906001600160401b03821161080c576103cd6004870154613111565b601f8111610c4f575b50602090601f8311600114610be05760409392915f9183610bd5575b50508160011b915f199060031b1c19161760048601555b015180519093906001600160401b03811161080c5761042b6005830154613111565b601f8111610b91575b506020601f8211600114610b265781929394955f92610b1b575b50508160011b915f199060031b1c19161760058201555b6080820151600481101561073e5760ff8019600684015416911617600682015561049f60a083015161049681612d5a565b6006830161316d565b600760c083015191015560405160208184516104be8183858901612cd2565b600490820190815203019020815181546001600160a01b0319166001600160a01b0391909116178155602082015180519093919291906001600160401b03811161080c5761050f6001850154613111565b601f8111610ad7575b506020601f8211600114610a6c5781929394955f92610a61575b50508160011b915f199060031b1c19161760018401555b604082015180519093906001600160401b03811161080c5761056e6002830154613111565b601f8111610a1d575b506020601f82116001146109b25781929394955f926109a7575b50508160011b915f199060031b1c19161760028201555b606083015180518051906001600160401b03821161080c5781906105cf6003860154613111565b601f8111610957575b50602090601f83116001146108e9575f926108de575b50508160011b915f199060031b1c19161760038301555b60208101518051906001600160401b03821161080c576106286004850154613111565b601f811161089a575b50602090601f831160011461082b5760409392915f9183610820575b50508160011b915f199060031b1c19161760048401555b015180519093906001600160401b03811161080c576106866005840154613111565b601f81116107c8575b506020601f821160011461075d5781929394955f92610752575b50508160011b915f199060031b1c19161760058301555b60068201608082015191600483101561073e576106fc60c09260079460ff8019835416911617815560a0830151906106f782612d5a565b61316d565b01519101557fc85b128388b9c331a2a5485dce4cd0f3db9f7c279d327ce95d6d39d6c94644c7604051602081528061073933946020830190612cf3565b0390a2005b634e487b7160e01b5f52602160045260245ffd5b0151905085806106a9565b600584015f5260205f20905f5b601f19841681106107b0575060019394959683601f19811610610798575b505050811b0160058301556106c0565b01515f1960f88460031b161c19169055858080610788565b9091602060018192858b01518155019301910161076a565b600584015f5260205f20601f830160051c810160208410610805575b601f830160051c820181106107fa57505061068f565b5f81556001016107e4565b50806107e4565b634e487b7160e01b5f52604160045260245ffd5b01519050878061064d565b90600485015f5260205f20915f5b601f1985168110610882575091839160019360409695601f1981161061086a575b505050811b016004840155610664565b01515f1960f88460031b161c1916905587808061085a565b91926020600181928685015181550194019201610839565b600485015f5260205f20601f840160051c8101602085106108d7575b601f830160051c820181106108cc575050610631565b5f81556001016108b6565b50806108b6565b0151905086806105ee565b9250600385015f5260205f20905f935b601f198416851061093c576001945083601f19811610610924575b505050811b016003830155610605565b01515f1960f88460031b161c19169055868080610914565b818101518355602094850194600190930192909101906108f9565b909150600385015f5260205f20601f840160051c8101602085106109a0575b90849392915b601f830160051c820181106109925750506105d8565b5f815585945060010161097c565b5080610976565b015190508580610591565b600283015f5260205f20905f5b601f1984168110610a05575060019394959683601f198116106109ed575b505050811b0160028201556105a8565b01515f1960f88460031b161c191690558580806109dd565b9091602060018192858b0151815501930191016109bf565b600283015f5260205f20601f830160051c810160208410610a5a575b601f830160051c82018110610a4f575050610577565b5f8155600101610a39565b5080610a39565b015190508580610532565b600185015f5260205f20905f5b601f1984168110610abf575060019394959683601f19811610610aa7575b505050811b016001840155610549565b01515f1960f88460031b161c19169055858080610a97565b9091602060018192858b015181550193019101610a79565b600185015f5260205f20601f830160051c810160208410610b14575b601f830160051c82018110610b09575050610518565b5f8155600101610af3565b5080610af3565b01519050858061044e565b600583015f5260205f20905f5b601f1984168110610b79575060019394959683601f19811610610b61575b505050811b016005820155610465565b01515f1960f88460031b161c19169055858080610b51565b9091602060018192858b015181550193019101610b33565b600583015f5260205f20601f830160051c810160208410610bce575b601f830160051c82018110610bc3575050610434565b5f8155600101610bad565b5080610bad565b0151905087806103f2565b90600487015f5260205f20915f5b601f1985168110610c37575091839160019360409695601f19811610610c1f575b505050811b016004860155610409565b01515f1960f88460031b161c19169055878080610c0f565b91926020600181928685015181550194019201610bee565b600487015f5260205f20601f840160051c810160208510610c8c575b601f830160051c82018110610c815750506103d6565b5f8155600101610c6b565b5080610c6b565b015190508680610393565b9250600387015f5260205f20905f935b601f1984168510610cf1576001945083601f19811610610cd9575b505050811b0160038501556103aa565b01515f1960f88460031b161c19169055868080610cc9565b81810151835560209485019460019093019290910190610cae565b909150600387015f5260205f20601f840160051c810160208510610d55575b90849392915b601f830160051c82018110610d4757505061037d565b5f8155859450600101610d31565b5080610d2b565b015190508580610336565b600285015f5260205f20905f5b601f1984168110610dba575060019394959683601f19811610610da2575b505050811b01600284015561034d565b01515f1960f88460031b161c19169055858080610d92565b9091602060018192858b015181550193019101610d74565b600285015f5260205f20601f830160051c810160208410610e0f575b601f830160051c82018110610e0457505061031c565b5f8155600101610dee565b5080610dee565b0151905085806102d7565b600184015f5260205f20905f5b601f1984168110610e74575060019394959683601f19811610610e5c575b505050811b0160018301556102ee565b01515f1960f88460031b161c19169055858080610e4c565b9091602060018192858b015181550193019101610e2e565b600184015f5260205f20601f830160051c810160208410610ec9575b601f830160051c82018110610ebe5750506102bd565b5f8155600101610ea8565b5080610ea8565b60405162461bcd60e51b815260206004820152601a60248201527914185d1a595b9d08185b1c9958591e481c9959da5cdd195c995960321b6044820152606490fd5b3461013557604036600319011261013557610f4e600435610f31612cbc565b90805f525f602052610f49600160405f200154612d64565b613049565b005b3461013557604036600319011261013557610f69612ca6565b6001600160401b0360243581811161013557610f89903690600401612c3a565b905f805160206134268339815191525f526020925f845260405f20335f528452610fb960ff60405f2054166130ce565b604051610fc581612be1565b60018060a01b03809216938482528582019081526040820193600193848652865f526005885260405f2093511660018060a01b03198454161783558383019151805191821161080c576110188354613111565b601f8111611130575b508790601f83116001146110cc576002949392915f91836110c1575b50505f19600383901b1c191690851b1790555b01915115159160ff199260ff8483541691161790555f805160206133e683398151915293845f525f815260405f20845f52815260ff60405f2054161561109257005b845f525f815260405f2090845f525260405f209182541617905533915f805160206133a68339815191525f80a4005b01519050898061103d565b9392918591601f19821690845f528a5f20915f5b8c82821061111a575050968360029810611102575b505050811b019055611050565b01515f1960f88460031b161c191690558980806110f5565b838a015185558a969094019392830192016110e0565b835f52885f20601f840160051c8101918a851061116c575b601f0160051c019086905b828110611161575050611021565b5f8155018690611153565b9091508190611148565b346101355760208060031936011261013557611190612ca6565b905f805160206133e68339815191525f525f815260405f20335f5281526111bd60ff60405f20541661318c565b6001600160a01b039182165f81815260038352604090205490926111e391161515613222565b815f526003815260405f209060068201916101009161ff0019938385825416179055600180920191604051925f9181549161121d83613111565b928281169081156112a1575060011461126f575b5050600482525082900301902060060180549092161790557f4bd79aa5b1d12530ab28ff9e594e33215eb3f438567371e28b534f56291912aa5f80a2005b5f908152848120929350915b83831061129057505050820182600688611231565b80548684015291840191810161127b565b60ff19168752505050801515028301905082600688611231565b34610135576020366003190112610135576112d4612ca6565b6112dc613276565b5060018060a01b038091165f52600360205260405f20604051916112ff83612bfc565b808254168352611311600183016132c7565b90602084019182526113cc611328600285016132c7565b6040860190815261133b60038601613368565b90606087019182526113bb6113a5600688015496600760ff60808c01996113648282168c613161565b60081c169960a08c019a61137781612d5a565b8b5201549660c08b019788526040519a60208c52511660208b01525160e060408b01526101008a0190612cf3565b915191601f1992838a83030160608b0152612cf3565b915190878303016080880152612d18565b915192600484101561073e57849360a0850152516113e981612d5a565b60c08401525160e08301520390f35b346101355760208060031936011261013557611412612ca6565b905f805160206133e68339815191525f525f815260405f20335f52815261143f60ff60405f20541661318c565b60018060a01b0380921691825f5261146360019182845260405f20541615156131e4565b825f5280825260405f209181600684019360ff19946002868254161790550191604051925f9181549161149583613111565b928783821691825f1461151e5750506001146114ec575b50505091600691818460028096520301902001918254161790557f6eec7c65c0ec059fb7a62c934d9e457bd69ddb64f1289863203546252f538ec65f80a2005b5f908152848120929350915b83831061150d575050508201818360026114ac565b8054868401529184019181016114f8565b1687525050508015150283019050818360026114ac565b34610135575f3660031901126101355760206040515f8152f35b346101355760208060031936011261013557611569612ca6565b5f805160206134268339815191525f525f825260405f20335f52825261159560ff60405f2054166130ce565b60018060a01b0316805f5260058252600260405f200160ff19908181541690555f805160206133e683398151915292835f525f81526115da600160405f200154612d64565b835f525f815260405f20835f52815260ff60405f2054166115f757005b835f525f815260405f2090835f525260405f2090815416905533915f805160206134068339815191525f80a4005b346101355760403660031901126101355761163e612cbc565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610135576020366003190112610135576004356001600160401b038111610135576116b660206116a381933690600401612c3a565b8160405193828580945193849201612cd2565b8101600681520301902054604051908152f35b34610135575f3660031901126101355760206040515f805160206134268339815191528152f35b34610135576020806003193601126101355761170a612ca6565b905f805160206133e68339815191525f525f815260405f20335f52815261173760ff60405f20541661318c565b60018060a01b0380921691825f5261175b60019182845260405f20541615156131e4565b825f5280825260405f209181600684019360ff199482868254161790550190604051915f9080549061178c82613111565b918787821691825f146118125750506001146117e0575b50506002815282900301902060060180549092161790557f7fcf85ab81e2edb7164631e63960326e5607c9c7fa788d1572ea3984fb943ff05f80a2005b9091505f52815f20845f915b8383106118005750505082018260066117a3565b805486840152918401918691016117ec565b168652505080151502830190508260066117a3565b34610135575f36600319011261013557335f9081527f66122dbf116992647e8ec9b2edde5029adb8aa93882c4df698d3b02b488fb73c6020526040902054610f4e9060ff1661318c565b346101355760403660031901126101355761188a612cbc565b336001600160a01b038216036118a657610f4e90600435613049565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101355760403660031901126101355760043561191f612cbc565b815f525f602052611936600160405f200154612d64565b815f525f60205260405f209060018060a01b031690815f5260205260ff60405f2054161561196057005b815f525f60205260405f20815f5260205260405f20600160ff1982541617905533915f805160206133a68339815191525f80a4005b34610135576020366003190112610135576119ae612ca6565b6119b6613276565b5060018060a01b038091165f52600160205260405f20604051906119d982612bfc565b8281541682526119eb600182016132c7565b602083019081526119fe600283016132c7565b9160408401928352611a84611a1560038301613368565b6060860190815260ff600684015416946080870195611a3381612d5a565b86526113bb6113a560ff600860078801549760a08c019889520154169660c08a0197611a5e81612d5a565b88526040519a8b9a60208c52511660208b01525160e060408b01526101008a0190612cf3565b9251611a8f81612d5a565b60a08501525160c084015251611aa481612d5a565b60e08301520390f35b346101355760208060031936011261013557611ac7612ca6565b905f805160206133e68339815191525f525f815260405f20335f528152611af460ff60405f20541661318c565b6001600160a01b039182165f8181526003835260409020549092611b1a91161515613222565b815f526003815260405f209060068201916102009161ff0019938385825416179055600180920191604051925f91815491611b5483613111565b92828116908115611bd85750600114611ba6575b5050600482525082900301902060060180549092161790557f167bbda895efdc29117ad9a9bf9887d286681297abf886ea5a21738dc77619635f80a2005b5f908152848120929350915b838310611bc757505050820182600688611b68565b805486840152918401918101611bb2565b60ff19168752505050801515028301905082600688611b68565b34610135576040366003190112610135576001600160401b03600435818111610135573660238201121561013557806004013591611c2f83612c8f565b90611c3d6040519283612c17565b8382526020928383016024809660051b8301019136831161013557868101915b838310611da857505050508335908111610135573660238201121561013557806004013590611c8b82612c8f565b91611c996040519384612c17565b808352858584019160051b830101913683116101355786869101915b838310611d9857505050505f805160206134268339815191525f525f835260405f20335f528352611cec60ff60405f2054166130ce565b8151815103611d5b575f5b8251811015610f4e57611d0a8183613262565b51611d2d85611d198487613262565b518160405193828580945193849201612cd2565b81016006815203019020555f198114611d4857600101611cf7565b84634e487b7160e01b5f5260116004525ffd5b60405162461bcd60e51b81526004810184905260168186015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b8235815291810191869101611cb5565b8235858111610135578791611dc383928b3691870101612c3a565b815201920191611c5d565b34610135576020366003190112610135576004355f525f6020526020600160405f200154604051908152f35b346101355760a0366003190112610135576004356001600160401b03811161013557611e2a903690600401612c3a565b6024356001600160401b03811161013557611e49903690600401612c3a565b906044356001600160401b03811161013557611e69903690600401612c3a565b6064356001600160401b03811161013557611e88903690600401612c3a565b6084356001600160401b03811161013557611ea7903690600401612c3a565b90335f52600160205260018060a01b0360405f205416612b4e5760405192611ece84612be1565b83526020830152604082015260405192611ee784612bfc565b338452826020850152604084015260608301525f60808301524260a08301525f60c0830152335f52600160205260405f2060018060a01b0383511660018060a01b0319825416178155602083015192835160018060401b03811161080c57611f526001840154613111565b601f8111612b0a575b506020601f8211600114612a9f5781929394955f92612a94575b50508160011b915f199060031b1c19161760018301555b604081015180519093906001600160401b03811161080c57611fb16002850154613111565b601f8111612a50575b506020601f82116001146129e55781929394955f926129da575b50508160011b915f199060031b1c19161760028401555b606082015180518051906001600160401b03821161080c5781906120126003880154613111565b601f811161298a575b50602090601f831160011461291c575f92612911575b50508160011b915f199060031b1c19161760038501555b60208101518051906001600160401b03821161080c5761206b6004870154613111565b601f81116128cd575b50602090601f831160011461285e5760409392915f9183612853575b50508160011b915f199060031b1c19161760048601555b015180519093906001600160401b03811161080c576120c96005830154613111565b601f811161280f575b506020601f82116001146127a45781929394955f92612799575b50508160011b915f199060031b1c19161760058201555b61211d608084015161211481612d5a565b60068301613149565b60a08301516007820155600860c084015161213781612d5a565b61214081612d5a565b60ff8019838501541691161791015560405160208183516121648183858801612cd2565b600290820190815203019020825181546001600160a01b0319166001600160a01b0391909116178155602083015180519093919291906001600160401b03811161080c576121b56001850154613111565b601f8111612755575b506020601f82116001146126ea5781929394955f926126df575b50508160011b915f199060031b1c19161760018401555b604081015180519093906001600160401b03811161080c576122146002830154613111565b601f811161269b575b506020601f82116001146126305781929394955f92612625575b50508160011b915f199060031b1c19161760028201555b606082015180518051906001600160401b03821161080c5781906122756003860154613111565b601f81116125d5575b50602090601f8311600114612567575f9261255c575b50508160011b915f199060031b1c19161760038301555b60208101518051906001600160401b03821161080c576122ce6004850154613111565b601f8111612518575b50602090601f83116001146124a95760409392915f918361249e575b50508160011b915f199060031b1c19161760048401555b01518051906001600160401b03821161080c5761232a6005840154613111565b601f811161245a575b50602090601f83116001146123e957918060c094926008945f926123de575b50508160011b915f199060031b1c19161760058201555b61237a608085015161211481612d5a565b60a084015160078201550191015161239181612d5a565b61239a81612d5a565b60ff801983541691161790557ff6bba8a2d47514955cc8e64ea9127b51d5615832d1fbd20ec40275f0876cfcbf604051602081528061073933946020830190612cf3565b015190508780612352565b90600584015f5260205f20915f5b601f198516811061244257509260c0949260019260089583601f1981161061242a575b505050811b016005820155612369565b01515f1960f88460031b161c1916905587808061241a565b919260206001819286850151815501940192016123f7565b600584015f5260205f20601f840160051c810160208510612497575b601f830160051c8201811061248c575050612333565b5f8155600101612476565b5080612476565b0151905087806122f3565b90600485015f5260205f20915f5b601f1985168110612500575091839160019360409695601f198116106124e8575b505050811b01600484015561230a565b01515f1960f88460031b161c191690558780806124d8565b919260206001819286850151815501940192016124b7565b600485015f5260205f20601f840160051c810160208510612555575b601f830160051c8201811061254a5750506122d7565b5f8155600101612534565b5080612534565b015190508680612294565b9250600385015f5260205f20905f935b601f19841685106125ba576001945083601f198116106125a2575b505050811b0160038301556122ab565b01515f1960f88460031b161c19169055868080612592565b81810151835560209485019460019093019290910190612577565b909150600385015f5260205f20601f840160051c81016020851061261e575b90849392915b601f830160051c8201811061261057505061227e565b5f81558594506001016125fa565b50806125f4565b015190508580612237565b600283015f5260205f20905f5b601f1984168110612683575060019394959683601f1981161061266b575b505050811b01600282015561224e565b01515f1960f88460031b161c1916905585808061265b565b9091602060018192858b01518155019301910161263d565b600283015f5260205f20601f830160051c8101602084106126d8575b601f830160051c820181106126cd57505061221d565b5f81556001016126b7565b50806126b7565b0151905085806121d8565b600185015f5260205f20905f5b601f198416811061273d575060019394959683601f19811610612725575b505050811b0160018401556121ef565b01515f1960f88460031b161c19169055858080612715565b9091602060018192858b0151815501930191016126f7565b600185015f5260205f20601f830160051c810160208410612792575b601f830160051c820181106127875750506121be565b5f8155600101612771565b5080612771565b0151905085806120ec565b600583015f5260205f20905f5b601f19841681106127f7575060019394959683601f198116106127df575b505050811b016005820155612103565b01515f1960f88460031b161c191690558580806127cf565b9091602060018192858b0151815501930191016127b1565b600583015f5260205f20601f830160051c81016020841061284c575b601f830160051c820181106128415750506120d2565b5f815560010161282b565b508061282b565b015190508780612090565b90600487015f5260205f20915f5b601f19851681106128b5575091839160019360409695601f1981161061289d575b505050811b0160048601556120a7565b01515f1960f88460031b161c1916905587808061288d565b9192602060018192868501518155019401920161286c565b600487015f5260205f20601f840160051c81016020851061290a575b601f830160051c820181106128ff575050612074565b5f81556001016128e9565b50806128e9565b015190508680612031565b9250600387015f5260205f20905f935b601f198416851061296f576001945083601f19811610612957575b505050811b016003850155612048565b01515f1960f88460031b161c19169055868080612947565b8181015183556020948501946001909301929091019061292c565b909150600387015f5260205f20601f840160051c8101602085106129d3575b90849392915b601f830160051c820181106129c557505061201b565b5f81558594506001016129af565b50806129a9565b015190508580611fd4565b600285015f5260205f20905f5b601f1984168110612a38575060019394959683601f19811610612a20575b505050811b016002840155611feb565b01515f1960f88460031b161c19169055858080612a10565b9091602060018192858b0151815501930191016129f2565b600285015f5260205f20601f830160051c810160208410612a8d575b601f830160051c82018110612a82575050611fba565b5f8155600101612a6c565b5080612a6c565b015190508580611f75565b600184015f5260205f20905f5b601f1984168110612af2575060019394959683601f19811610612ada575b505050811b016001830155611f8c565b01515f1960f88460031b161c19169055858080612aca565b9091602060018192858b015181550193019101612aac565b600184015f5260205f20601f830160051c810160208410612b47575b601f830160051c82018110612b3c575050611f5b565b5f8155600101612b26565b5080612b26565b60405162461bcd60e51b8152602060048201526018602482015277111bdb9bdc88185b1c9958591e481c9959da5cdd195c995960421b6044820152606490fd5b34610135576020366003190112610135576004359063ffffffff60e01b821680920361013557602091637965db0b60e01b8114908115612bd0575b5015158152f35b6301ffc9a760e01b14905083612bc9565b606081019081106001600160401b0382111761080c57604052565b60e081019081106001600160401b0382111761080c57604052565b601f909101601f19168101906001600160401b0382119082101761080c57604052565b81601f82011215610135578035906001600160401b03821161080c5760405192612c6e601f8401601f191660200185612c17565b8284526020838301011161013557815f926020809301838601378301015290565b6001600160401b03811161080c5760051b60200190565b600435906001600160a01b038216820361013557565b602435906001600160a01b038216820361013557565b5f5b838110612ce35750505f910152565b8181015183820152602001612cd4565b90602091612d0c81518092818552858086019101612cd2565b601f01601f1916010190565b612d57916040612d46612d348451606085526060850190612cf3565b60208501518482036020860152612cf3565b920151906040818403910152612cf3565b90565b6003111561073e57565b5f90808252602090828252604092838120338252835260ff848220541615612d8c5750505050565b33845192612d9984612be1565b602a845284840190863683378451156130355760308253845192600193841015613021576078602187015360295b848111612fb85750612f8957865192608084016001600160401b03811185821017612f7557885260428452868401946060368737845115612f6157603086538451821015612f615790607860218601536041915b818311612ef457505050612ec557612ec1938693612ea593612e96604894612e6d9a519a8b9576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8c8801525180926037880190612cd2565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190612cd2565b01036028810187520185612c17565b5192839262461bcd60e51b845260048401526024830190612cf3565b0390fd5b60648587519062461bcd60e51b825280600483015260248201525f805160206133c68339815191526044820152fd5b909192600f81166010811015612f4d576f181899199a1a9b1b9c1cb0b131b232b360811b901a612f2485886130a9565b5360041c928015612f39575f19019190612e1b565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648688519062461bcd60e51b825280600483015260248201525f805160206133c68339815191526044820152fd5b90600f8116601081101561300d576f181899199a1a9b1b9c1cb0b131b232b360811b901a612fe683896130a9565b5360041c908015612ff9575f1901612dc7565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b84526032600452602484fd5b905f9180835282602052604083209160018060a01b03169182845260205260ff60408420541661307857505050565b80835282602052604083208284526020526040832060ff1981541690555f80516020613406833981519152339380a4565b9081518110156130ba570160200190565b634e487b7160e01b5f52603260045260245ffd5b156130d557565b60405162461bcd60e51b81526020600482015260146024820152735265737472696374656420746f2061646d696e7360601b6044820152606490fd5b90600182811c9216801561313f575b602083101461312b57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691613120565b9061315381612d5a565b60ff80198354169116179055565b600482101561073e5752565b9061317781612d5a565b61ff0082549160081b169061ff001916179055565b1561319357565b60405162461bcd60e51b815260206004820152602360248201527f5265737472696374656420746f206d65646963616c2070726f66657373696f6e604482015262616c7360e81b6064820152608490fd5b156131eb57565b60405162461bcd60e51b815260206004820152600f60248201526e111bdb9bdc881b9bdd08199bdd5b99608a1b6044820152606490fd5b1561322957565b60405162461bcd60e51b815260206004820152601160248201527014185d1a595b9d081b9bdd08199bdd5b99607a1b6044820152606490fd5b80518210156130ba5760209160051b010190565b6040519061328382612bfc565b5f60c0838281526060806020830152806040830152604051906132a582612be1565b8082528060208301528060408301528201528260808201528260a08201520152565b9060405191825f8254926132da84613111565b9081845260019485811690815f146133455750600114613305575b505061330392500383612c17565b565b909391505f52602090815f20935f915b81831061332d57505061330393508201015f806132f5565b85548884018501529485019487945091830191613315565b91505061330394506020925060ff191682840152151560051b8201015f806132f5565b9060405161337581612be1565b60406133a060028395613387816132c7565b8552613395600182016132c7565b6020860152016132c7565b91015256fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d537472696e67733a20686578206c656e67746820696e73756666696369656e743d996811b6c57808d2ab4085610e72112b731add711039f190aa101456aa1cc0f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171ba49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220e673ad76fbb5264890b989850ad038f7ace1fcca598de44333bbf3b55864cfde64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
  "deployedBytecode": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a714612b8e575080631414f2fd14611dfa578063248a9ca314611dce57806326a9c75414611bf25780632c9365fa14611aad5780632cc5329a146119955780632f2ff15d1461190357806336568abe146118715780634959a52f14611827578063506af7e2146116f057806375b238fc146116c95780638cd19dd81461166d57806391d14854146116255780639ebfe0181461154f578063a217fddf14611535578063a74f0920146113f8578063ba5c0335146112bb578063c756d5a714611176578063cc1e343d14610f50578063d547741f14610f12578063e58f0227146101395763ef33a8971461010e575f80fd5b34610135575f3660031901126101355760206040515f805160206133e68339815191528152f35b5f80fd5b346101355760c0366003190112610135576004356001600160401b03811161013557610169903690600401612c3a565b6024356001600160401b03811161013557610188903690600401612c3a565b6044356001600160401b038111610135576101a7903690600401612c3a565b6064356001600160401b038111610135576101c6903690600401612c3a565b906084356001600160401b038111610135576101e6903690600401612c3a565b9060a43591600483101561013557335f908152600360205260409020546001600160a01b0316610ed057610256936040519261022184612be1565b8352602083015260408201526040519361023a85612bfc565b3385528560208601526040850152606084015260808301613161565b5f60a082018190524260c0830152338152600360209081526040909120825181546001600160a01b0319166001600160a01b03919091161781559082015180519093906001600160401b03811161080c576102b46001840154613111565b601f8111610e8c575b506020601f8211600114610e215781929394955f92610e16575b50508160011b915f199060031b1c19161760018301555b604083015180519093906001600160401b03811161080c576103136002850154613111565b601f8111610dd2575b506020601f8211600114610d675781929394955f92610d5c575b50508160011b915f199060031b1c19161760028401555b606081015180518051906001600160401b03821161080c5781906103746003880154613111565b601f8111610d0c575b50602090601f8311600114610c9e575f92610c93575b50508160011b915f199060031b1c19161760038501555b60208101518051906001600160401b03821161080c576103cd6004870154613111565b601f8111610c4f575b50602090601f8311600114610be05760409392915f9183610bd5575b50508160011b915f199060031b1c19161760048601555b015180519093906001600160401b03811161080c5761042b6005830154613111565b601f8111610b91575b506020601f8211600114610b265781929394955f92610b1b575b50508160011b915f199060031b1c19161760058201555b6080820151600481101561073e5760ff8019600684015416911617600682015561049f60a083015161049681612d5a565b6006830161316d565b600760c083015191015560405160208184516104be8183858901612cd2565b600490820190815203019020815181546001600160a01b0319166001600160a01b0391909116178155602082015180519093919291906001600160401b03811161080c5761050f6001850154613111565b601f8111610ad7575b506020601f8211600114610a6c5781929394955f92610a61575b50508160011b915f199060031b1c19161760018401555b604082015180519093906001600160401b03811161080c5761056e6002830154613111565b601f8111610a1d575b506020601f82116001146109b25781929394955f926109a7575b50508160011b915f199060031b1c19161760028201555b606083015180518051906001600160401b03821161080c5781906105cf6003860154613111565b601f8111610957575b50602090601f83116001146108e9575f926108de575b50508160011b915f199060031b1c19161760038301555b60208101518051906001600160401b03821161080c576106286004850154613111565b601f811161089a575b50602090601f831160011461082b5760409392915f9183610820575b50508160011b915f199060031b1c19161760048401555b015180519093906001600160401b03811161080c576106866005840154613111565b601f81116107c8575b506020601f821160011461075d5781929394955f92610752575b50508160011b915f199060031b1c19161760058301555b60068201608082015191600483101561073e576106fc60c09260079460ff8019835416911617815560a0830151906106f782612d5a565b61316d565b01519101557fc85b128388b9c331a2a5485dce4cd0f3db9f7c279d327ce95d6d39d6c94644c7604051602081528061073933946020830190612cf3565b0390a2005b634e487b7160e01b5f52602160045260245ffd5b0151905085806106a9565b600584015f5260205f20905f5b601f19841681106107b0575060019394959683601f19811610610798575b505050811b0160058301556106c0565b01515f1960f88460031b161c19169055858080610788565b9091602060018192858b01518155019301910161076a565b600584015f5260205f20601f830160051c810160208410610805575b601f830160051c820181106107fa57505061068f565b5f81556001016107e4565b50806107e4565b634e487b7160e01b5f52604160045260245ffd5b01519050878061064d565b90600485015f5260205f20915f5b601f1985168110610882575091839160019360409695601f1981161061086a575b505050811b016004840155610664565b01515f1960f88460031b161c1916905587808061085a565b91926020600181928685015181550194019201610839565b600485015f5260205f20601f840160051c8101602085106108d7575b601f830160051c820181106108cc575050610631565b5f81556001016108b6565b50806108b6565b0151905086806105ee565b9250600385015f5260205f20905f935b601f198416851061093c576001945083601f19811610610924575b505050811b016003830155610605565b01515f1960f88460031b161c19169055868080610914565b818101518355602094850194600190930192909101906108f9565b909150600385015f5260205f20601f840160051c8101602085106109a0575b90849392915b601f830160051c820181106109925750506105d8565b5f815585945060010161097c565b5080610976565b015190508580610591565b600283015f5260205f20905f5b601f1984168110610a05575060019394959683601f198116106109ed575b505050811b0160028201556105a8565b01515f1960f88460031b161c191690558580806109dd565b9091602060018192858b0151815501930191016109bf565b600283015f5260205f20601f830160051c810160208410610a5a575b601f830160051c82018110610a4f575050610577565b5f8155600101610a39565b5080610a39565b015190508580610532565b600185015f5260205f20905f5b601f1984168110610abf575060019394959683601f19811610610aa7575b505050811b016001840155610549565b01515f1960f88460031b161c19169055858080610a97565b9091602060018192858b015181550193019101610a79565b600185015f5260205f20601f830160051c810160208410610b14575b601f830160051c82018110610b09575050610518565b5f8155600101610af3565b5080610af3565b01519050858061044e565b600583015f5260205f20905f5b601f1984168110610b79575060019394959683601f19811610610b61575b505050811b016005820155610465565b01515f1960f88460031b161c19169055858080610b51565b9091602060018192858b015181550193019101610b33565b600583015f5260205f20601f830160051c810160208410610bce575b601f830160051c82018110610bc3575050610434565b5f8155600101610bad565b5080610bad565b0151905087806103f2565b90600487015f5260205f20915f5b601f1985168110610c37575091839160019360409695601f19811610610c1f575b505050811b016004860155610409565b01515f1960f88460031b161c19169055878080610c0f565b91926020600181928685015181550194019201610bee565b600487015f5260205f20601f840160051c810160208510610c8c575b601f830160051c82018110610c815750506103d6565b5f8155600101610c6b565b5080610c6b565b015190508680610393565b9250600387015f5260205f20905f935b601f1984168510610cf1576001945083601f19811610610cd9575b505050811b0160038501556103aa565b01515f1960f88460031b161c19169055868080610cc9565b81810151835560209485019460019093019290910190610cae565b909150600387015f5260205f20601f840160051c810160208510610d55575b90849392915b601f830160051c82018110610d4757505061037d565b5f8155859450600101610d31565b5080610d2b565b015190508580610336565b600285015f5260205f20905f5b601f1984168110610dba575060019394959683601f19811610610da2575b505050811b01600284015561034d565b01515f1960f88460031b161c19169055858080610d92565b9091602060018192858b015181550193019101610d74565b600285015f5260205f20601f830160051c810160208410610e0f575b601f830160051c82018110610e0457505061031c565b5f8155600101610dee565b5080610dee565b0151905085806102d7565b600184015f5260205f20905f5b601f1984168110610e74575060019394959683601f19811610610e5c575b505050811b0160018301556102ee565b01515f1960f88460031b161c19169055858080610e4c565b9091602060018192858b015181550193019101610e2e565b600184015f5260205f20601f830160051c810160208410610ec9575b601f830160051c82018110610ebe5750506102bd565b5f8155600101610ea8565b5080610ea8565b60405162461bcd60e51b815260206004820152601a60248201527914185d1a595b9d08185b1c9958591e481c9959da5cdd195c995960321b6044820152606490fd5b3461013557604036600319011261013557610f4e600435610f31612cbc565b90805f525f602052610f49600160405f200154612d64565b613049565b005b3461013557604036600319011261013557610f69612ca6565b6001600160401b0360243581811161013557610f89903690600401612c3a565b905f805160206134268339815191525f526020925f845260405f20335f528452610fb960ff60405f2054166130ce565b604051610fc581612be1565b60018060a01b03809216938482528582019081526040820193600193848652865f526005885260405f2093511660018060a01b03198454161783558383019151805191821161080c576110188354613111565b601f8111611130575b508790601f83116001146110cc576002949392915f91836110c1575b50505f19600383901b1c191690851b1790555b01915115159160ff199260ff8483541691161790555f805160206133e683398151915293845f525f815260405f20845f52815260ff60405f2054161561109257005b845f525f815260405f2090845f525260405f209182541617905533915f805160206133a68339815191525f80a4005b01519050898061103d565b9392918591601f19821690845f528a5f20915f5b8c82821061111a575050968360029810611102575b505050811b019055611050565b01515f1960f88460031b161c191690558980806110f5565b838a015185558a969094019392830192016110e0565b835f52885f20601f840160051c8101918a851061116c575b601f0160051c019086905b828110611161575050611021565b5f8155018690611153565b9091508190611148565b346101355760208060031936011261013557611190612ca6565b905f805160206133e68339815191525f525f815260405f20335f5281526111bd60ff60405f20541661318c565b6001600160a01b039182165f81815260038352604090205490926111e391161515613222565b815f526003815260405f209060068201916101009161ff0019938385825416179055600180920191604051925f9181549161121d83613111565b928281169081156112a1575060011461126f575b5050600482525082900301902060060180549092161790557f4bd79aa5b1d12530ab28ff9e594e33215eb3f438567371e28b534f56291912aa5f80a2005b5f908152848120929350915b83831061129057505050820182600688611231565b80548684015291840191810161127b565b60ff19168752505050801515028301905082600688611231565b34610135576020366003190112610135576112d4612ca6565b6112dc613276565b5060018060a01b038091165f52600360205260405f20604051916112ff83612bfc565b808254168352611311600183016132c7565b90602084019182526113cc611328600285016132c7565b6040860190815261133b60038601613368565b90606087019182526113bb6113a5600688015496600760ff60808c01996113648282168c613161565b60081c169960a08c019a61137781612d5a565b8b5201549660c08b019788526040519a60208c52511660208b01525160e060408b01526101008a0190612cf3565b915191601f1992838a83030160608b0152612cf3565b915190878303016080880152612d18565b915192600484101561073e57849360a0850152516113e981612d5a565b60c08401525160e08301520390f35b346101355760208060031936011261013557611412612ca6565b905f805160206133e68339815191525f525f815260405f20335f52815261143f60ff60405f20541661318c565b60018060a01b0380921691825f5261146360019182845260405f20541615156131e4565b825f5280825260405f209181600684019360ff19946002868254161790550191604051925f9181549161149583613111565b928783821691825f1461151e5750506001146114ec575b50505091600691818460028096520301902001918254161790557f6eec7c65c0ec059fb7a62c934d9e457bd69ddb64f1289863203546252f538ec65f80a2005b5f908152848120929350915b83831061150d575050508201818360026114ac565b8054868401529184019181016114f8565b1687525050508015150283019050818360026114ac565b34610135575f3660031901126101355760206040515f8152f35b346101355760208060031936011261013557611569612ca6565b5f805160206134268339815191525f525f825260405f20335f52825261159560ff60405f2054166130ce565b60018060a01b0316805f5260058252600260405f200160ff19908181541690555f805160206133e683398151915292835f525f81526115da600160405f200154612d64565b835f525f815260405f20835f52815260ff60405f2054166115f757005b835f525f815260405f2090835f525260405f2090815416905533915f805160206134068339815191525f80a4005b346101355760403660031901126101355761163e612cbc565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610135576020366003190112610135576004356001600160401b038111610135576116b660206116a381933690600401612c3a565b8160405193828580945193849201612cd2565b8101600681520301902054604051908152f35b34610135575f3660031901126101355760206040515f805160206134268339815191528152f35b34610135576020806003193601126101355761170a612ca6565b905f805160206133e68339815191525f525f815260405f20335f52815261173760ff60405f20541661318c565b60018060a01b0380921691825f5261175b60019182845260405f20541615156131e4565b825f5280825260405f209181600684019360ff199482868254161790550190604051915f9080549061178c82613111565b918787821691825f146118125750506001146117e0575b50506002815282900301902060060180549092161790557f7fcf85ab81e2edb7164631e63960326e5607c9c7fa788d1572ea3984fb943ff05f80a2005b9091505f52815f20845f915b8383106118005750505082018260066117a3565b805486840152918401918691016117ec565b168652505080151502830190508260066117a3565b34610135575f36600319011261013557335f9081527f66122dbf116992647e8ec9b2edde5029adb8aa93882c4df698d3b02b488fb73c6020526040902054610f4e9060ff1661318c565b346101355760403660031901126101355761188a612cbc565b336001600160a01b038216036118a657610f4e90600435613049565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101355760403660031901126101355760043561191f612cbc565b815f525f602052611936600160405f200154612d64565b815f525f60205260405f209060018060a01b031690815f5260205260ff60405f2054161561196057005b815f525f60205260405f20815f5260205260405f20600160ff1982541617905533915f805160206133a68339815191525f80a4005b34610135576020366003190112610135576119ae612ca6565b6119b6613276565b5060018060a01b038091165f52600160205260405f20604051906119d982612bfc565b8281541682526119eb600182016132c7565b602083019081526119fe600283016132c7565b9160408401928352611a84611a1560038301613368565b6060860190815260ff600684015416946080870195611a3381612d5a565b86526113bb6113a560ff600860078801549760a08c019889520154169660c08a0197611a5e81612d5a565b88526040519a8b9a60208c52511660208b01525160e060408b01526101008a0190612cf3565b9251611a8f81612d5a565b60a08501525160c084015251611aa481612d5a565b60e08301520390f35b346101355760208060031936011261013557611ac7612ca6565b905f805160206133e68339815191525f525f815260405f20335f528152611af460ff60405f20541661318c565b6001600160a01b039182165f8181526003835260409020549092611b1a91161515613222565b815f526003815260405f209060068201916102009161ff0019938385825416179055600180920191604051925f91815491611b5483613111565b92828116908115611bd85750600114611ba6575b5050600482525082900301902060060180549092161790557f167bbda895efdc29117ad9a9bf9887d286681297abf886ea5a21738dc77619635f80a2005b5f908152848120929350915b838310611bc757505050820182600688611b68565b805486840152918401918101611bb2565b60ff19168752505050801515028301905082600688611b68565b34610135576040366003190112610135576001600160401b03600435818111610135573660238201121561013557806004013591611c2f83612c8f565b90611c3d6040519283612c17565b8382526020928383016024809660051b8301019136831161013557868101915b838310611da857505050508335908111610135573660238201121561013557806004013590611c8b82612c8f565b91611c996040519384612c17565b808352858584019160051b830101913683116101355786869101915b838310611d9857505050505f805160206134268339815191525f525f835260405f20335f528352611cec60ff60405f2054166130ce565b8151815103611d5b575f5b8251811015610f4e57611d0a8183613262565b51611d2d85611d198487613262565b518160405193828580945193849201612cd2565b81016006815203019020555f198114611d4857600101611cf7565b84634e487b7160e01b5f5260116004525ffd5b60405162461bcd60e51b81526004810184905260168186015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b8235815291810191869101611cb5565b8235858111610135578791611dc383928b3691870101612c3a565b815201920191611c5d565b34610135576020366003190112610135576004355f525f6020526020600160405f200154604051908152f35b346101355760a0366003190112610135576004356001600160401b03811161013557611e2a903690600401612c3a565b6024356001600160401b03811161013557611e49903690600401612c3a565b906044356001600160401b03811161013557611e69903690600401612c3a565b6064356001600160401b03811161013557611e88903690600401612c3a565b6084356001600160401b03811161013557611ea7903690600401612c3a565b90335f52600160205260018060a01b0360405f205416612b4e5760405192611ece84612be1565b83526020830152604082015260405192611ee784612bfc565b338452826020850152604084015260608301525f60808301524260a08301525f60c0830152335f52600160205260405f2060018060a01b0383511660018060a01b0319825416178155602083015192835160018060401b03811161080c57611f526001840154613111565b601f8111612b0a575b506020601f8211600114612a9f5781929394955f92612a94575b50508160011b915f199060031b1c19161760018301555b604081015180519093906001600160401b03811161080c57611fb16002850154613111565b601f8111612a50575b506020601f82116001146129e55781929394955f926129da575b50508160011b915f199060031b1c19161760028401555b606082015180518051906001600160401b03821161080c5781906120126003880154613111565b601f811161298a575b50602090601f831160011461291c575f92612911575b50508160011b915f199060031b1c19161760038501555b60208101518051906001600160401b03821161080c5761206b6004870154613111565b601f81116128cd575b50602090601f831160011461285e5760409392915f9183612853575b50508160011b915f199060031b1c19161760048601555b015180519093906001600160401b03811161080c576120c96005830154613111565b601f811161280f575b506020601f82116001146127a45781929394955f92612799575b50508160011b915f199060031b1c19161760058201555b61211d608084015161211481612d5a565b60068301613149565b60a08301516007820155600860c084015161213781612d5a565b61214081612d5a565b60ff8019838501541691161791015560405160208183516121648183858801612cd2565b600290820190815203019020825181546001600160a01b0319166001600160a01b0391909116178155602083015180519093919291906001600160401b03811161080c576121b56001850154613111565b601f8111612755575b506020601f82116001146126ea5781929394955f926126df575b50508160011b915f199060031b1c19161760018401555b604081015180519093906001600160401b03811161080c576122146002830154613111565b601f811161269b575b506020601f82116001146126305781929394955f92612625575b50508160011b915f199060031b1c19161760028201555b606082015180518051906001600160401b03821161080c5781906122756003860154613111565b601f81116125d5575b50602090601f8311600114612567575f9261255c575b50508160011b915f199060031b1c19161760038301555b60208101518051906001600160401b03821161080c576122ce6004850154613111565b601f8111612518575b50602090601f83116001146124a95760409392915f918361249e575b50508160011b915f199060031b1c19161760048401555b01518051906001600160401b03821161080c5761232a6005840154613111565b601f811161245a575b50602090601f83116001146123e957918060c094926008945f926123de575b50508160011b915f199060031b1c19161760058201555b61237a608085015161211481612d5a565b60a084015160078201550191015161239181612d5a565b61239a81612d5a565b60ff801983541691161790557ff6bba8a2d47514955cc8e64ea9127b51d5615832d1fbd20ec40275f0876cfcbf604051602081528061073933946020830190612cf3565b015190508780612352565b90600584015f5260205f20915f5b601f198516811061244257509260c0949260019260089583601f1981161061242a575b505050811b016005820155612369565b01515f1960f88460031b161c1916905587808061241a565b919260206001819286850151815501940192016123f7565b600584015f5260205f20601f840160051c810160208510612497575b601f830160051c8201811061248c575050612333565b5f8155600101612476565b5080612476565b0151905087806122f3565b90600485015f5260205f20915f5b601f1985168110612500575091839160019360409695601f198116106124e8575b505050811b01600484015561230a565b01515f1960f88460031b161c191690558780806124d8565b919260206001819286850151815501940192016124b7565b600485015f5260205f20601f840160051c810160208510612555575b601f830160051c8201811061254a5750506122d7565b5f8155600101612534565b5080612534565b015190508680612294565b9250600385015f5260205f20905f935b601f19841685106125ba576001945083601f198116106125a2575b505050811b0160038301556122ab565b01515f1960f88460031b161c19169055868080612592565b81810151835560209485019460019093019290910190612577565b909150600385015f5260205f20601f840160051c81016020851061261e575b90849392915b601f830160051c8201811061261057505061227e565b5f81558594506001016125fa565b50806125f4565b015190508580612237565b600283015f5260205f20905f5b601f1984168110612683575060019394959683601f1981161061266b575b505050811b01600282015561224e565b01515f1960f88460031b161c1916905585808061265b565b9091602060018192858b01518155019301910161263d565b600283015f5260205f20601f830160051c8101602084106126d8575b601f830160051c820181106126cd57505061221d565b5f81556001016126b7565b50806126b7565b0151905085806121d8565b600185015f5260205f20905f5b601f198416811061273d575060019394959683601f19811610612725575b505050811b0160018401556121ef565b01515f1960f88460031b161c19169055858080612715565b9091602060018192858b0151815501930191016126f7565b600185015f5260205f20601f830160051c810160208410612792575b601f830160051c820181106127875750506121be565b5f8155600101612771565b5080612771565b0151905085806120ec565b600583015f5260205f20905f5b601f19841681106127f7575060019394959683601f198116106127df575b505050811b016005820155612103565b01515f1960f88460031b161c191690558580806127cf565b9091602060018192858b0151815501930191016127b1565b600583015f5260205f20601f830160051c81016020841061284c575b601f830160051c820181106128415750506120d2565b5f815560010161282b565b508061282b565b015190508780612090565b90600487015f5260205f20915f5b601f19851681106128b5575091839160019360409695601f1981161061289d575b505050811b0160048601556120a7565b01515f1960f88460031b161c1916905587808061288d565b9192602060018192868501518155019401920161286c565b600487015f5260205f20601f840160051c81016020851061290a575b601f830160051c820181106128ff575050612074565b5f81556001016128e9565b50806128e9565b015190508680612031565b9250600387015f5260205f20905f935b601f198416851061296f576001945083601f19811610612957575b505050811b016003850155612048565b01515f1960f88460031b161c19169055868080612947565b8181015183556020948501946001909301929091019061292c565b909150600387015f5260205f20601f840160051c8101602085106129d3575b90849392915b601f830160051c820181106129c557505061201b565b5f81558594506001016129af565b50806129a9565b015190508580611fd4565b600285015f5260205f20905f5b601f1984168110612a38575060019394959683601f19811610612a20575b505050811b016002840155611feb565b01515f1960f88460031b161c19169055858080612a10565b9091602060018192858b0151815501930191016129f2565b600285015f5260205f20601f830160051c810160208410612a8d575b601f830160051c82018110612a82575050611fba565b5f8155600101612a6c565b5080612a6c565b015190508580611f75565b600184015f5260205f20905f5b601f1984168110612af2575060019394959683601f19811610612ada575b505050811b016001830155611f8c565b01515f1960f88460031b161c19169055858080612aca565b9091602060018192858b015181550193019101612aac565b600184015f5260205f20601f830160051c810160208410612b47575b601f830160051c82018110612b3c575050611f5b565b5f8155600101612b26565b5080612b26565b60405162461bcd60e51b8152602060048201526018602482015277111bdb9bdc88185b1c9958591e481c9959da5cdd195c995960421b6044820152606490fd5b34610135576020366003190112610135576004359063ffffffff60e01b821680920361013557602091637965db0b60e01b8114908115612bd0575b5015158152f35b6301ffc9a760e01b14905083612bc9565b606081019081106001600160401b0382111761080c57604052565b60e081019081106001600160401b0382111761080c57604052565b601f909101601f19168101906001600160401b0382119082101761080c57604052565b81601f82011215610135578035906001600160401b03821161080c5760405192612c6e601f8401601f191660200185612c17565b8284526020838301011161013557815f926020809301838601378301015290565b6001600160401b03811161080c5760051b60200190565b600435906001600160a01b038216820361013557565b602435906001600160a01b038216820361013557565b5f5b838110612ce35750505f910152565b8181015183820152602001612cd4565b90602091612d0c81518092818552858086019101612cd2565b601f01601f1916010190565b612d57916040612d46612d348451606085526060850190612cf3565b60208501518482036020860152612cf3565b920151906040818403910152612cf3565b90565b6003111561073e57565b5f90808252602090828252604092838120338252835260ff848220541615612d8c5750505050565b33845192612d9984612be1565b602a845284840190863683378451156130355760308253845192600193841015613021576078602187015360295b848111612fb85750612f8957865192608084016001600160401b03811185821017612f7557885260428452868401946060368737845115612f6157603086538451821015612f615790607860218601536041915b818311612ef457505050612ec557612ec1938693612ea593612e96604894612e6d9a519a8b9576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8c8801525180926037880190612cd2565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190612cd2565b01036028810187520185612c17565b5192839262461bcd60e51b845260048401526024830190612cf3565b0390fd5b60648587519062461bcd60e51b825280600483015260248201525f805160206133c68339815191526044820152fd5b909192600f81166010811015612f4d576f181899199a1a9b1b9c1cb0b131b232b360811b901a612f2485886130a9565b5360041c928015612f39575f19019190612e1b565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b86526041600452602486fd5b60648688519062461bcd60e51b825280600483015260248201525f805160206133c68339815191526044820152fd5b90600f8116601081101561300d576f181899199a1a9b1b9c1cb0b131b232b360811b901a612fe683896130a9565b5360041c908015612ff9575f1901612dc7565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b84526032600452602484fd5b905f9180835282602052604083209160018060a01b03169182845260205260ff60408420541661307857505050565b80835282602052604083208284526020526040832060ff1981541690555f80516020613406833981519152339380a4565b9081518110156130ba570160200190565b634e487b7160e01b5f52603260045260245ffd5b156130d557565b60405162461bcd60e51b81526020600482015260146024820152735265737472696374656420746f2061646d696e7360601b6044820152606490fd5b90600182811c9216801561313f575b602083101461312b57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691613120565b9061315381612d5a565b60ff80198354169116179055565b600482101561073e5752565b9061317781612d5a565b61ff0082549160081b169061ff001916179055565b1561319357565b60405162461bcd60e51b815260206004820152602360248201527f5265737472696374656420746f206d65646963616c2070726f66657373696f6e604482015262616c7360e81b6064820152608490fd5b156131eb57565b60405162461bcd60e51b815260206004820152600f60248201526e111bdb9bdc881b9bdd08199bdd5b99608a1b6044820152606490fd5b1561322957565b60405162461bcd60e51b815260206004820152601160248201527014185d1a595b9d081b9bdd08199bdd5b99607a1b6044820152606490fd5b80518210156130ba5760209160051b010190565b6040519061328382612bfc565b5f60c0838281526060806020830152806040830152604051906132a582612be1565b8082528060208301528060408301528201528260808201528260a08201520152565b9060405191825f8254926132da84613111565b9081845260019485811690815f146133455750600114613305575b505061330392500383612c17565b565b909391505f52602090815f20935f915b81831061332d57505061330393508201015f806132f5565b85548884018501529485019487945091830191613315565b91505061330394506020925060ff191682840152151560051b8201015f806132f5565b9060405161337581612be1565b60406133a060028395613387816132c7565b8552613395600182016132c7565b6020860152016132c7565b91015256fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d537472696e67733a20686578206c656e67746820696e73756666696369656e743d996811b6c57808d2ab4085610e72112b731add711039f190aa101456aa1cc0f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171ba49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220e673ad76fbb5264890b989850ad038f7ace1fcca598de44333bbf3b55864cfde64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "122:7556:20:-:0;;;;;;;;2198:4:0;122:7556:20;;;;;;;;;;;2620:10;122:7556;;;;;;;;;;7669:23:0;7665:149;;-1:-1:-1;206:23:20;122:7556;;;;;;;;;;2620:10;122:7556;;;;;;;;;;7669:23:0;7665:149;;-1:-1:-1;122:7556:20;;;;;;;7665:149:0;122:7556:20;;;;;;;;;2620:10;;122:7556;;;;;7740:4:0;122:7556:20;;;;;;;;2620:10;;-1:-1:-1;;;;;;;;;;;2620:10:20;7763:40:0;;;7665:149;;;;;;;122:7556:20;;;;;;;;;2620:10;122:7556;;;;;;;7740:4:0;122:7556:20;;;;;;;;2620:10;;7763:40:0;-1:-1:-1;;;;;;;;;;;7763:40:0;;;7665:149;;122:7556:20;;;",
  "deployedSourceMap": "122:7556:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4094:10;122:7556;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;4268:102;122:7556;;;;;;;:::i;:::-;;;;4198:31;;122:7556;;4198:31;;122:7556;;;;;;;:::i;:::-;4094:10;122:7556;;4268:102;122:7556;4268:102;;122:7556;;4268:102;;122:7556;;4268:102;;122:7556;;4268:102;;;:::i;:::-;122:7556;;4268:102;;122:7556;;;4354:15;122:7556;4268:102;;122:7556;4094:10;122:7556;;;;;;;;;;;;;;;-1:-1:-1;;;;;;122:7556:20;-1:-1:-1;;;;;122:7556:20;;;;;;;4268:102;;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;4268:102;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;:::i;:::-;;;;;:::i;:::-;;;4268:102;;122:7556;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;122:7556:20;-1:-1:-1;;;;;122:7556:20;;;;;;;;4268:102;;122:7556;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;;;;;;;;;;;;;;;;;;;;;4268:102;;122:7556;;;;;:::i;:::-;;:::i;:::-;4268:102;122:7556;;;;4493:40;122:7556;;;;;4094:10;122:7556;4094:10;122:7556;;;;;;:::i;:::-;4493:40;;;122:7556;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;5486:7:0;122:7556:20;;;;:::i;:::-;;;;;;;;2642:4:0;122:7556:20;;;;4604:22:0;122:7556:20;2642:4:0;:::i;:::-;5486:7;:::i;:::-;122:7556:20;;;;;;;-1:-1:-1;;122:7556:20;;;;;;:::i;:::-;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;;;2170:10;122:7556;;;;2142:64;122:7556;;;;;;2142:64;:::i;:::-;122:7556;;;;;:::i;:::-;;;;;;;;;;;;;2842:43;;;122:7556;;;;2842:43;;122:7556;;;;;;;;;2816:11;122:7556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;7669:23:0;7665:149;;122:7556:20;7665:149:0;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;2170:10;7763:40:0;-1:-1:-1;;;;;;;;;;;122:7556:20;7763:40:0;;122:7556:20;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2816:11;122:7556;;;;;;;;;;;;2816:11;122:7556;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;2305:10;122:7556;;;;2271:85;122:7556;;;;;;2271:85;:::i;:::-;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;;;;;5044:89;;122:7556;5052:59;;5044:89;:::i;:::-;122:7556;;;;;;;;;5144:37;;;;122:7556;;;;;;;;;;;;;;;5242:40;;;122:7556;;;;;;;;;;;;:::i;:::-;;;;;;5184:27;;;;122:7556;;;;;;-1:-1:-1;;122:7556:20;;;-1:-1:-1;122:7556:20;;;;;;5144:37;5222:68;122:7556;;;;;;;;5336:28;-1:-1:-1;;5336:28:20;122:7556;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;;;122:7556:20;;;5144:37;122:7556;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;-1:-1:-1;;;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;5144:37;122:7556;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;2305:10;122:7556;;;;2271:85;122:7556;;;;;;2271:85;:::i;:::-;122:7556;;;;;;;;;;;;5481:81;122:7556;;;;;;;;;;5489:53;;5481:81;:::i;:::-;122:7556;;;;;;;;;5573:33;;;;;122:7556;;;;5609:27;122:7556;;;;;;;5665:36;122:7556;;;;;;;;;;;;:::i;:::-;;;;;;5489:15;;122:7556;5489:15;;;122:7556;;;;;;;;;;;5573:33;122:7556;;;5609:27;122:7556;;;;;;;5647:62;122:7556;;;;;;;5755:24;122:7556;5755:24;;122:7556;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;;;122:7556:20;;;;5609:27;122:7556;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;5609:27;122:7556;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;2170:10;122:7556;;;;2142:64;122:7556;;;;;;2142:64;:::i;:::-;122:7556;;;;;;;;;3035:11;122:7556;;3035:30;122:7556;;;3035:30;122:7556;;;;;;;;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;2642:4:0;122:7556:20;;;;4604:22:0;122:7556:20;2642:4:0;:::i;:::-;122:7556:20;;;;;;;;;;;;;;;;;;;;8070:149:0;;122:7556:20;8070:149:0;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;2170:10;8168:40:0;-1:-1:-1;;;;;;;;;;;122:7556:20;8168:40:0;;122:7556:20;;;;;;;-1:-1:-1;;122:7556:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;1544:53;122:7556;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;2305:10;122:7556;;;;2271:85;122:7556;;;;;;2271:85;:::i;:::-;122:7556;;;;;;;;;;;;4653:81;122:7556;;;;;;;;;;4661:53;;4653:81;:::i;:::-;122:7556;;;;;;;;;4745:33;;;;;122:7556;;;;;;;;;;;;4837:36;122:7556;;;;;;;;;;;;:::i;:::-;;;;;;4661:15;;122:7556;4661:15;;;122:7556;;;;;;;-1:-1:-1;;4819:17:20;122:7556;;;;;;;;4745:33;4819:62;122:7556;;;;;;;;4927:24;-1:-1:-1;;4927:24:20;122:7556;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;4745:33;122:7556;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;4745:33;122:7556;;;;;;;;-1:-1:-1;;122:7556:20;;;;2305:10;122:7556;;;;;;;;;;;2271:85;;122:7556;;2271:85;:::i;122:7556::-;;;;;;-1:-1:-1;;122:7556:20;;;;;;:::i;:::-;734:10:12;-1:-1:-1;;;;;122:7556:20;;6133:23:0;122:7556:20;;6237:7:0;122:7556:20;;;6237:7:0;:::i;122:7556:20:-;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;:::i;:::-;;;;;;;2642:4:0;122:7556:20;;;;4604:22:0;122:7556:20;2642:4:0;:::i;:::-;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;7669:23:0;7665:149;;122:7556:20;7665:149:0;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;734:10:12;7763:40:0;-1:-1:-1;;;;;;;;;;;122:7556:20;7763:40:0;;122:7556:20;;;;;;;-1:-1:-1;;122:7556:20;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;2305:10;122:7556;;;;2271:85;122:7556;;;;;;2271:85;:::i;:::-;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;;;;;5872:89;;122:7556;5880:59;;5872:89;:::i;:::-;122:7556;;;;;;;;;5972:37;;;;122:7556;;;;;;;;;;;;;;;6070:40;;;122:7556;;;;;;;;;;;;:::i;:::-;;;;;;6070:40;;;;122:7556;;;;;;-1:-1:-1;;122:7556:20;;;-1:-1:-1;122:7556:20;;;;;;5972:37;6050:68;122:7556;;;;;;;;6164:28;-1:-1:-1;;6164:28:20;122:7556;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;;;122:7556:20;;;5972:37;122:7556;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;-1:-1:-1;;;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;5972:37;122:7556;;;;;;;;;-1:-1:-1;;122:7556:20;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;122:7556:20;;;;;;;;2170:10;122:7556;;;;2142:64;122:7556;;;;;;2142:64;:::i;:::-;122:7556;;;;6385:29;122:7556;;;6491:3;122:7556;;6472:17;;;;;6544:8;;;;:::i;:::-;122:7556;;6531:9;;;;;:::i;:::-;;122:7556;;;;;;;;;;;;;;:::i;:::-;;;6511:19;122:7556;;;;;;;;;;;;;;;6457:13;;122:7556;;;;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;4604:22:0;122:7556:20;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;:::i;:::-;3394:10;;122:7556;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3494:31;;122:7556;;3494:31;;122:7556;;;;;;;:::i;:::-;3394:10;122:7556;;3560:101;122:7556;3560:101;;122:7556;;3560:101;;122:7556;;3560:101;;122:7556;;;3560:101;;122:7556;3629:15;122:7556;3560:101;;122:7556;;3560:101;;;122:7556;3394:10;122:7556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;:::i;:::-;;;;;:::i;:::-;;3560:101;;122:7556;;;;;;3560:101;;;122:7556;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;122:7556:20;-1:-1:-1;;;;;122:7556:20;;;;;;;;3560:101;;122:7556;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3560:101;122:7556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:101;;122:7556;;;;:::i;:::-;;3560:101;;122:7556;;;;;;3560:101;;122:7556;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;3776:38;122:7556;;;;;3394:10;122:7556;3394:10;122:7556;;;;;;:::i;:::-;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;3560:101;122:7556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2840:47:0;;;:87;;;;122:7556:20;;;;;;;2840:87:0;-1:-1:-1;;;937:40:15;;-1:-1:-1;2840:87:0;;;122:7556:20;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;:::o;:::-;;;;;-1:-1:-1;;122:7556:20;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;-1:-1:-1;;122:7556:20;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;122:7556:20;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;122:7556:20;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;122:7556:20;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;122:7556:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;122:7556:20;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;-1:-1:-1;122:7556:20;;;:::o;3460:103:0:-;3130:6;122:7556:20;;;;;;;;;;;;;;734:10:12;122:7556:20;;;;;;;;;;3931:23:0;3927:390;;3460:103;;;;:::o;3927:390::-;734:10:12;122:7556:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1975:15:14;;;122:7556:20;;;;;;;;;;2000:15:14;122:7556:20;;;2000:15:14;122:7556:20;2058:5:14;;;;;;2170:10;278:18;;122:7556:20;;;;;;-1:-1:-1;;;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;1975:15:14;;;122:7556:20;;;;;;;;2000:15:14;122:7556:20;;;2000:15:14;122:7556:20;2025:128:14;2058:5;;;;;;2170:10;;;278:18;;122:7556:20;;;;4022:252:0;122:7556:20;;;;;;;4022:252:0;;;-1:-1:-1;;;4022:252:0;;;122:7556:20;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;:::i;:::-;;4022:252:0;;;;;;;;;:::i;:::-;122:7556:20;;;;;;;3970:336:0;;2141:1:14;3970:336:0;;122:7556:20;;;;;;:::i;:::-;3970:336:0;;;278:18:14;;122:7556:20;;;;;;;278:18:14;;;2141:1;278:18;;;;;;122:7556:20;-1:-1:-1;;;;;;;;;;;122:7556:20;;;278:18:14;;2065:3;2105:11;;;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:14;;2084:33;;;;:::i;:::-;;2141:1;122:7556:20;2065:3:14;122:7556:20;;;;-1:-1:-1;;122:7556:20;;2030:26:14;;;122:7556:20;-1:-1:-1;;;122:7556:20;;;2141:1:14;122:7556:20;;;;2096:21:14;-1:-1:-1;;;122:7556:20;;;2141:1:14;122:7556:20;;;;;-1:-1:-1;;;122:7556:20;;;2141:1:14;122:7556:20;;;;;-1:-1:-1;;;122:7556:20;;;2141:1:14;122:7556:20;;;;278:18:14;;122:7556:20;;;;;;;278:18:14;;;2141:1;278:18;;;;;;122:7556:20;-1:-1:-1;;;;;;;;;;;122:7556:20;;;278:18:14;;2065:3;2105:11;2113:3;2105:11;;2096:21;;;;;;-1:-1:-1;;;2096:21:14;;2084:33;;;;:::i;:::-;;2141:1;122:7556:20;2065:3:14;122:7556:20;;;;-1:-1:-1;;122:7556:20;2030:26:14;;122:7556:20;-1:-1:-1;;;122:7556:20;;;2141:1:14;122:7556:20;;;;2096:21:14;-1:-1:-1;;;122:7556:20;;;2141:1:14;122:7556:20;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;7991:234:0;;3130:6;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8070:149:0;;7991:234;;;:::o;8070:149::-;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;734:10:12;8168:40:0;;;7991:234::o;122:7556:20:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;-1:-1:-1;;;122:7556:20;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;122:7556:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;122:7556:20;;;;-1:-1:-1;122:7556:20;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:7556:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract DonorContract is AccessControl {\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    bytes32 public constant MEDICAL_PRO_ROLE = keccak256(\"MEDICAL_PRO_ROLE\");\r\n\r\n    enum VerificationStatus { Pending, Verified, Rejected }\r\n    enum UrgencyLevel { Low, Medium, High, Critical }\r\n    enum BadgeType { None, FirstTimeDonor, FamilyDonor }\r\n\r\n    struct Location {\r\n        string city;\r\n        string region;\r\n        string country;\r\n    }\r\n\r\n    struct Donor {\r\n        address donorAddress;\r\n        string medicalID;\r\n        string organ;\r\n        Location location;\r\n        VerificationStatus status;\r\n        uint256 registrationTime;\r\n        BadgeType badge;\r\n    }\r\n\r\n    struct Patient {\r\n        address patientAddress;\r\n        string medicalID;\r\n        string organNeeded;\r\n        Location location;\r\n        UrgencyLevel urgency;\r\n        VerificationStatus status;\r\n        uint256 registrationTime;\r\n    }\r\n\r\n    struct MedicalProfessional {\r\n        address proAddress;\r\n        string name;\r\n        bool active;\r\n    }\r\n\r\n    mapping(address => Donor) private donorsByAddress;\r\n    mapping(string => Donor) private donorsByMedicalID;\r\n\r\n    mapping(address => Patient) private patientsByAddress;\r\n    mapping(string => Patient) private patientsByMedicalID;\r\n\r\n    mapping(address => MedicalProfessional) private medicalPros;\r\n\r\n    // Organ viability times in seconds\r\n    mapping(string => uint256) public organViabilityTimes;\r\n\r\n    // Events\r\n    event DonorRegistered(address indexed donorAddress, string medicalID);\r\n    event PatientRegistered(address indexed patientAddress, string medicalID);\r\n    event DonorVerified(address indexed donorAddress);\r\n    event PatientVerified(address indexed patientAddress);\r\n    event DonorRejected(address indexed donorAddress);\r\n    event PatientRejected(address indexed patientAddress);\r\n    event MatchFound(address indexed donorAddress, address indexed patientAddress, string organ);\r\n\r\n    modifier onlyAdmin() {\r\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Restricted to admins\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyMedicalPro() {\r\n        require(hasRole(MEDICAL_PRO_ROLE, msg.sender), \"Restricted to medical professionals\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyVerifiedDonor(address donorAddr) {\r\n        require(donorsByAddress[donorAddr].status == VerificationStatus.Verified, \"Donor not verified\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _setupRole(ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    // Admin functions\r\n    function addMedicalProfessional(address proAddress, string memory name) public onlyAdmin {\r\n        medicalPros[proAddress] = MedicalProfessional(proAddress, name, true);\r\n        _setupRole(MEDICAL_PRO_ROLE, proAddress);\r\n    }\r\n\r\n    function removeMedicalProfessional(address proAddress) public onlyAdmin {\r\n        medicalPros[proAddress].active = false;\r\n        revokeRole(MEDICAL_PRO_ROLE, proAddress);\r\n    }\r\n\r\n    // Registration functions\r\n    function addDonor(\r\n        string memory medicalID,\r\n        string memory organ,\r\n        string memory city,\r\n        string memory region,\r\n        string memory country\r\n    ) public {\r\n        require(donorsByAddress[msg.sender].donorAddress == address(0), \"Donor already registered\");\r\n        Location memory loc = Location(city, region, country);\r\n        Donor memory newDonor = Donor(msg.sender, medicalID, organ, loc, VerificationStatus.Pending, block.timestamp, BadgeType.None);\r\n        donorsByAddress[msg.sender] = newDonor;\r\n        donorsByMedicalID[medicalID] = newDonor;\r\n        emit DonorRegistered(msg.sender, medicalID);\r\n    }\r\n\r\n    function addPatient(\r\n        string memory medicalID,\r\n        string memory organNeeded,\r\n        string memory city,\r\n        string memory region,\r\n        string memory country,\r\n        UrgencyLevel urgency\r\n    ) public {\r\n        require(patientsByAddress[msg.sender].patientAddress == address(0), \"Patient already registered\");\r\n        Location memory loc = Location(city, region, country);\r\n        Patient memory newPatient = Patient(msg.sender, medicalID, organNeeded, loc, urgency, VerificationStatus.Pending, block.timestamp);\r\n        patientsByAddress[msg.sender] = newPatient;\r\n        patientsByMedicalID[medicalID] = newPatient;\r\n        emit PatientRegistered(msg.sender, medicalID);\r\n    }\r\n\r\n    // Verification functions\r\n    function verifyDonor(address donorAddr) public onlyMedicalPro {\r\n        require(donorsByAddress[donorAddr].donorAddress != address(0), \"Donor not found\");\r\n        donorsByAddress[donorAddr].status = VerificationStatus.Verified;\r\n        donorsByMedicalID[donorsByAddress[donorAddr].medicalID].status = VerificationStatus.Verified;\r\n        emit DonorVerified(donorAddr);\r\n    }\r\n\r\n    function verifyPatient(address patientAddr) public onlyMedicalPro {\r\n        require(patientsByAddress[patientAddr].patientAddress != address(0), \"Patient not found\");\r\n        patientsByAddress[patientAddr].status = VerificationStatus.Verified;\r\n        patientsByMedicalID[patientsByAddress[patientAddr].medicalID].status = VerificationStatus.Verified;\r\n        emit PatientVerified(patientAddr);\r\n    }\r\n\r\n    // Rejection functions\r\n    function rejectDonor(address donorAddr) public onlyMedicalPro {\r\n        require(donorsByAddress[donorAddr].donorAddress != address(0), \"Donor not found\");\r\n        donorsByAddress[donorAddr].status = VerificationStatus.Rejected;\r\n        donorsByMedicalID[donorsByAddress[donorAddr].medicalID].status = VerificationStatus.Rejected;\r\n        emit DonorRejected(donorAddr);\r\n    }\r\n\r\n    function rejectPatient(address patientAddr) public onlyMedicalPro {\r\n        require(patientsByAddress[patientAddr].patientAddress != address(0), \"Patient not found\");\r\n        patientsByAddress[patientAddr].status = VerificationStatus.Rejected;\r\n        patientsByMedicalID[patientsByAddress[patientAddr].medicalID].status = VerificationStatus.Rejected;\r\n        emit PatientRejected(patientAddr);\r\n    }\r\n\r\n    // Initialize organ viability times (in seconds)\r\n    function initializeOrganViabilityTimes(string[] memory organs, uint256[] memory times) public onlyAdmin {\r\n        require(organs.length == times.length, \"Arrays length mismatch\");\r\n        for (uint256 i = 0; i < organs.length; i++) {\r\n            organViabilityTimes[organs[i]] = times[i];\r\n        }\r\n    }\r\n\r\n    // Getters\r\n    function getDonorByAddress(address donorAddr) public view returns (Donor memory) {\r\n        return donorsByAddress[donorAddr];\r\n    }\r\n\r\n    function getPatientByAddress(address patientAddr) public view returns (Patient memory) {\r\n        return patientsByAddress[patientAddr];\r\n    }\r\n\r\n    // Matching algorithm (simplified for demonstration)\r\n    function matchDonorsAndPatients() public onlyMedicalPro {\r\n        // For simplicity, iterate over donors and patients and emit MatchFound if organ and location match and donor is verified\r\n        // In practice, this should be optimized and off-chain for scalability\r\n        // This is a placeholder implementation\r\n\r\n        // Note: Solidity does not support iteration over mappings, so this function would require off-chain indexing or events to track donors/patients\r\n\r\n        // Emit event for demonstration\r\n        // emit MatchFound(donorAddress, patientAddress, organ);\r\n    }\r\n\r\n    // Additional getters for all donors/patients and verified donors/patients would require off-chain indexing or arrays to store keys\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\Admin\\Desktop\\organ-donation-dapp\\contracts\\DonorContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/DonorContract.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "Context": [
        2507
      ],
      "DonorContract": [
        4694
      ],
      "ERC165": [
        2834
      ],
      "IAccessControl": [
        388
      ],
      "IERC165": [
        2846
      ],
      "Math": [
        3712
      ],
      "SignedMath": [
        3817
      ],
      "Strings": [
        2810
      ]
    },
    "id": 4695,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4048,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 4049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4695,
        "sourceUnit": 316,
        "src": "60:58:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4050,
              "name": "AccessControl",
              "nameLocations": [
                "148:13:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 315,
              "src": "148:13:20"
            },
            "id": 4051,
            "nodeType": "InheritanceSpecifier",
            "src": "148:13:20"
          }
        ],
        "canonicalName": "DonorContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4694,
        "linearizedBaseContracts": [
          4694,
          315,
          2834,
          2846,
          388,
          2507
        ],
        "name": "DonorContract",
        "nameLocation": "131:13:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 4056,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nameLocation": "193:10:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "169:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4052,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "169:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 4054,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "216:12:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 4053,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "206:9:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4055,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "206:23:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ef33a897",
            "id": 4061,
            "mutability": "constant",
            "name": "MEDICAL_PRO_ROLE",
            "nameLocation": "260:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "236:72:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4057,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d45444943414c5f50524f5f524f4c45",
                  "id": 4059,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "289:18:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3d996811b6c57808d2ab4085610e72112b731add711039f190aa101456aa1cc0",
                    "typeString": "literal_string \"MEDICAL_PRO_ROLE\""
                  },
                  "value": "MEDICAL_PRO_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3d996811b6c57808d2ab4085610e72112b731add711039f190aa101456aa1cc0",
                    "typeString": "literal_string \"MEDICAL_PRO_ROLE\""
                  }
                ],
                "id": 4058,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "279:9:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4060,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "279:29:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "DonorContract.VerificationStatus",
            "id": 4065,
            "members": [
              {
                "id": 4062,
                "name": "Pending",
                "nameLocation": "343:7:20",
                "nodeType": "EnumValue",
                "src": "343:7:20"
              },
              {
                "id": 4063,
                "name": "Verified",
                "nameLocation": "352:8:20",
                "nodeType": "EnumValue",
                "src": "352:8:20"
              },
              {
                "id": 4064,
                "name": "Rejected",
                "nameLocation": "362:8:20",
                "nodeType": "EnumValue",
                "src": "362:8:20"
              }
            ],
            "name": "VerificationStatus",
            "nameLocation": "322:18:20",
            "nodeType": "EnumDefinition",
            "src": "317:55:20"
          },
          {
            "canonicalName": "DonorContract.UrgencyLevel",
            "id": 4070,
            "members": [
              {
                "id": 4066,
                "name": "Low",
                "nameLocation": "398:3:20",
                "nodeType": "EnumValue",
                "src": "398:3:20"
              },
              {
                "id": 4067,
                "name": "Medium",
                "nameLocation": "403:6:20",
                "nodeType": "EnumValue",
                "src": "403:6:20"
              },
              {
                "id": 4068,
                "name": "High",
                "nameLocation": "411:4:20",
                "nodeType": "EnumValue",
                "src": "411:4:20"
              },
              {
                "id": 4069,
                "name": "Critical",
                "nameLocation": "417:8:20",
                "nodeType": "EnumValue",
                "src": "417:8:20"
              }
            ],
            "name": "UrgencyLevel",
            "nameLocation": "383:12:20",
            "nodeType": "EnumDefinition",
            "src": "378:49:20"
          },
          {
            "canonicalName": "DonorContract.BadgeType",
            "id": 4074,
            "members": [
              {
                "id": 4071,
                "name": "None",
                "nameLocation": "450:4:20",
                "nodeType": "EnumValue",
                "src": "450:4:20"
              },
              {
                "id": 4072,
                "name": "FirstTimeDonor",
                "nameLocation": "456:14:20",
                "nodeType": "EnumValue",
                "src": "456:14:20"
              },
              {
                "id": 4073,
                "name": "FamilyDonor",
                "nameLocation": "472:11:20",
                "nodeType": "EnumValue",
                "src": "472:11:20"
              }
            ],
            "name": "BadgeType",
            "nameLocation": "438:9:20",
            "nodeType": "EnumDefinition",
            "src": "433:52:20"
          },
          {
            "canonicalName": "DonorContract.Location",
            "id": 4081,
            "members": [
              {
                "constant": false,
                "id": 4076,
                "mutability": "mutable",
                "name": "city",
                "nameLocation": "527:4:20",
                "nodeType": "VariableDeclaration",
                "scope": 4081,
                "src": "520:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4075,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4078,
                "mutability": "mutable",
                "name": "region",
                "nameLocation": "549:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4081,
                "src": "542:13:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4077,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "542:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4080,
                "mutability": "mutable",
                "name": "country",
                "nameLocation": "573:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4081,
                "src": "566:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4079,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "566:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Location",
            "nameLocation": "500:8:20",
            "nodeType": "StructDefinition",
            "scope": 4694,
            "src": "493:95:20",
            "visibility": "public"
          },
          {
            "canonicalName": "DonorContract.Donor",
            "id": 4099,
            "members": [
              {
                "constant": false,
                "id": 4083,
                "mutability": "mutable",
                "name": "donorAddress",
                "nameLocation": "628:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "620:20:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4082,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "620:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4085,
                "mutability": "mutable",
                "name": "medicalID",
                "nameLocation": "658:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "651:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4084,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "651:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4087,
                "mutability": "mutable",
                "name": "organ",
                "nameLocation": "685:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "678:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4086,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "678:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4090,
                "mutability": "mutable",
                "name": "location",
                "nameLocation": "710:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "701:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Location_$4081_storage_ptr",
                  "typeString": "struct DonorContract.Location"
                },
                "typeName": {
                  "id": 4089,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4088,
                    "name": "Location",
                    "nameLocations": [
                      "701:8:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4081,
                    "src": "701:8:20"
                  },
                  "referencedDeclaration": 4081,
                  "src": "701:8:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Location_$4081_storage_ptr",
                    "typeString": "struct DonorContract.Location"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4093,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "748:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "729:25:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                  "typeString": "enum DonorContract.VerificationStatus"
                },
                "typeName": {
                  "id": 4092,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4091,
                    "name": "VerificationStatus",
                    "nameLocations": [
                      "729:18:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4065,
                    "src": "729:18:20"
                  },
                  "referencedDeclaration": 4065,
                  "src": "729:18:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                    "typeString": "enum DonorContract.VerificationStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4095,
                "mutability": "mutable",
                "name": "registrationTime",
                "nameLocation": "773:16:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "765:24:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4094,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "765:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4098,
                "mutability": "mutable",
                "name": "badge",
                "nameLocation": "810:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 4099,
                "src": "800:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_BadgeType_$4074",
                  "typeString": "enum DonorContract.BadgeType"
                },
                "typeName": {
                  "id": 4097,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4096,
                    "name": "BadgeType",
                    "nameLocations": [
                      "800:9:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4074,
                    "src": "800:9:20"
                  },
                  "referencedDeclaration": 4074,
                  "src": "800:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BadgeType_$4074",
                    "typeString": "enum DonorContract.BadgeType"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Donor",
            "nameLocation": "603:5:20",
            "nodeType": "StructDefinition",
            "scope": 4694,
            "src": "596:227:20",
            "visibility": "public"
          },
          {
            "canonicalName": "DonorContract.Patient",
            "id": 4117,
            "members": [
              {
                "constant": false,
                "id": 4101,
                "mutability": "mutable",
                "name": "patientAddress",
                "nameLocation": "865:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "857:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4100,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "857:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4103,
                "mutability": "mutable",
                "name": "medicalID",
                "nameLocation": "897:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "890:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4102,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "890:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4105,
                "mutability": "mutable",
                "name": "organNeeded",
                "nameLocation": "924:11:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "917:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4104,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "917:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4108,
                "mutability": "mutable",
                "name": "location",
                "nameLocation": "955:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "946:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Location_$4081_storage_ptr",
                  "typeString": "struct DonorContract.Location"
                },
                "typeName": {
                  "id": 4107,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4106,
                    "name": "Location",
                    "nameLocations": [
                      "946:8:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4081,
                    "src": "946:8:20"
                  },
                  "referencedDeclaration": 4081,
                  "src": "946:8:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Location_$4081_storage_ptr",
                    "typeString": "struct DonorContract.Location"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4111,
                "mutability": "mutable",
                "name": "urgency",
                "nameLocation": "987:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "974:20:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_UrgencyLevel_$4070",
                  "typeString": "enum DonorContract.UrgencyLevel"
                },
                "typeName": {
                  "id": 4110,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4109,
                    "name": "UrgencyLevel",
                    "nameLocations": [
                      "974:12:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4070,
                    "src": "974:12:20"
                  },
                  "referencedDeclaration": 4070,
                  "src": "974:12:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UrgencyLevel_$4070",
                    "typeString": "enum DonorContract.UrgencyLevel"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4114,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "1024:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "1005:25:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                  "typeString": "enum DonorContract.VerificationStatus"
                },
                "typeName": {
                  "id": 4113,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 4112,
                    "name": "VerificationStatus",
                    "nameLocations": [
                      "1005:18:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4065,
                    "src": "1005:18:20"
                  },
                  "referencedDeclaration": 4065,
                  "src": "1005:18:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                    "typeString": "enum DonorContract.VerificationStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4116,
                "mutability": "mutable",
                "name": "registrationTime",
                "nameLocation": "1049:16:20",
                "nodeType": "VariableDeclaration",
                "scope": 4117,
                "src": "1041:24:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4115,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1041:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nameLocation": "838:7:20",
            "nodeType": "StructDefinition",
            "scope": 4694,
            "src": "831:242:20",
            "visibility": "public"
          },
          {
            "canonicalName": "DonorContract.MedicalProfessional",
            "id": 4124,
            "members": [
              {
                "constant": false,
                "id": 4119,
                "mutability": "mutable",
                "name": "proAddress",
                "nameLocation": "1127:10:20",
                "nodeType": "VariableDeclaration",
                "scope": 4124,
                "src": "1119:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4118,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1119:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4121,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1155:4:20",
                "nodeType": "VariableDeclaration",
                "scope": 4124,
                "src": "1148:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4120,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1148:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4123,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "1175:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 4124,
                "src": "1170:11:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4122,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1170:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MedicalProfessional",
            "nameLocation": "1088:19:20",
            "nodeType": "StructDefinition",
            "scope": 4694,
            "src": "1081:108:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4129,
            "mutability": "mutable",
            "name": "donorsByAddress",
            "nameLocation": "1231:15:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "1197:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
              "typeString": "mapping(address => struct DonorContract.Donor)"
            },
            "typeName": {
              "id": 4128,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4125,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1205:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1197:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                "typeString": "mapping(address => struct DonorContract.Donor)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4127,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4126,
                  "name": "Donor",
                  "nameLocations": [
                    "1216:5:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4099,
                  "src": "1216:5:20"
                },
                "referencedDeclaration": 4099,
                "src": "1216:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Donor_$4099_storage_ptr",
                  "typeString": "struct DonorContract.Donor"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4134,
            "mutability": "mutable",
            "name": "donorsByMedicalID",
            "nameLocation": "1286:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "1253:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Donor_$4099_storage_$",
              "typeString": "mapping(string => struct DonorContract.Donor)"
            },
            "typeName": {
              "id": 4133,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4130,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1261:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1253:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Donor_$4099_storage_$",
                "typeString": "mapping(string => struct DonorContract.Donor)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4132,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4131,
                  "name": "Donor",
                  "nameLocations": [
                    "1271:5:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4099,
                  "src": "1271:5:20"
                },
                "referencedDeclaration": 4099,
                "src": "1271:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Donor_$4099_storage_ptr",
                  "typeString": "struct DonorContract.Donor"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4139,
            "mutability": "mutable",
            "name": "patientsByAddress",
            "nameLocation": "1348:17:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "1312:53:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
              "typeString": "mapping(address => struct DonorContract.Patient)"
            },
            "typeName": {
              "id": 4138,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4135,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1320:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1312:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                "typeString": "mapping(address => struct DonorContract.Patient)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4137,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4136,
                  "name": "Patient",
                  "nameLocations": [
                    "1331:7:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4117,
                  "src": "1331:7:20"
                },
                "referencedDeclaration": 4117,
                "src": "1331:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$4117_storage_ptr",
                  "typeString": "struct DonorContract.Patient"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4144,
            "mutability": "mutable",
            "name": "patientsByMedicalID",
            "nameLocation": "1407:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "1372:54:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$4117_storage_$",
              "typeString": "mapping(string => struct DonorContract.Patient)"
            },
            "typeName": {
              "id": 4143,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4140,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1380:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1372:26:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$4117_storage_$",
                "typeString": "mapping(string => struct DonorContract.Patient)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4142,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4141,
                  "name": "Patient",
                  "nameLocations": [
                    "1390:7:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4117,
                  "src": "1390:7:20"
                },
                "referencedDeclaration": 4117,
                "src": "1390:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$4117_storage_ptr",
                  "typeString": "struct DonorContract.Patient"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4149,
            "mutability": "mutable",
            "name": "medicalPros",
            "nameLocation": "1483:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "1435:59:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalProfessional_$4124_storage_$",
              "typeString": "mapping(address => struct DonorContract.MedicalProfessional)"
            },
            "typeName": {
              "id": 4148,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4145,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1443:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1435:39:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalProfessional_$4124_storage_$",
                "typeString": "mapping(address => struct DonorContract.MedicalProfessional)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4147,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4146,
                  "name": "MedicalProfessional",
                  "nameLocations": [
                    "1454:19:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4124,
                  "src": "1454:19:20"
                },
                "referencedDeclaration": 4124,
                "src": "1454:19:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MedicalProfessional_$4124_storage_ptr",
                  "typeString": "struct DonorContract.MedicalProfessional"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8cd19dd8",
            "id": 4153,
            "mutability": "mutable",
            "name": "organViabilityTimes",
            "nameLocation": "1578:19:20",
            "nodeType": "VariableDeclaration",
            "scope": 4694,
            "src": "1544:53:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 4152,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4150,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1552:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1544:26:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4151,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1562:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "f6bba8a2d47514955cc8e64ea9127b51d5615832d1fbd20ec40275f0876cfcbf",
            "id": 4159,
            "name": "DonorRegistered",
            "nameLocation": "1627:15:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4155,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "donorAddress",
                  "nameLocation": "1659:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4159,
                  "src": "1643:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "medicalID",
                  "nameLocation": "1680:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4159,
                  "src": "1673:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1673:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1642:48:20"
            },
            "src": "1621:70:20"
          },
          {
            "anonymous": false,
            "eventSelector": "c85b128388b9c331a2a5485dce4cd0f3db9f7c279d327ce95d6d39d6c94644c7",
            "id": 4165,
            "name": "PatientRegistered",
            "nameLocation": "1703:17:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "patientAddress",
                  "nameLocation": "1737:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4165,
                  "src": "1721:30:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "medicalID",
                  "nameLocation": "1760:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4165,
                  "src": "1753:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:50:20"
            },
            "src": "1697:74:20"
          },
          {
            "anonymous": false,
            "eventSelector": "7fcf85ab81e2edb7164631e63960326e5607c9c7fa788d1572ea3984fb943ff0",
            "id": 4169,
            "name": "DonorVerified",
            "nameLocation": "1783:13:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "donorAddress",
                  "nameLocation": "1813:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4169,
                  "src": "1797:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:30:20"
            },
            "src": "1777:50:20"
          },
          {
            "anonymous": false,
            "eventSelector": "4bd79aa5b1d12530ab28ff9e594e33215eb3f438567371e28b534f56291912aa",
            "id": 4173,
            "name": "PatientVerified",
            "nameLocation": "1839:15:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4171,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "patientAddress",
                  "nameLocation": "1871:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4173,
                  "src": "1855:30:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1854:32:20"
            },
            "src": "1833:54:20"
          },
          {
            "anonymous": false,
            "eventSelector": "6eec7c65c0ec059fb7a62c934d9e457bd69ddb64f1289863203546252f538ec6",
            "id": 4177,
            "name": "DonorRejected",
            "nameLocation": "1899:13:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "donorAddress",
                  "nameLocation": "1929:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4177,
                  "src": "1913:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:30:20"
            },
            "src": "1893:50:20"
          },
          {
            "anonymous": false,
            "eventSelector": "167bbda895efdc29117ad9a9bf9887d286681297abf886ea5a21738dc7761963",
            "id": 4181,
            "name": "PatientRejected",
            "nameLocation": "1955:15:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "patientAddress",
                  "nameLocation": "1987:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4181,
                  "src": "1971:30:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1970:32:20"
            },
            "src": "1949:54:20"
          },
          {
            "anonymous": false,
            "eventSelector": "f9d7d360ff1ef9e38ae6d7c31e3bd49c96a2d817741530ca5e80773f6af26e8f",
            "id": 4189,
            "name": "MatchFound",
            "nameLocation": "2015:10:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4183,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "donorAddress",
                  "nameLocation": "2042:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "2026:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4185,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "patientAddress",
                  "nameLocation": "2072:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "2056:30:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "organ",
                  "nameLocation": "2095:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "2088:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2088:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:76:20"
            },
            "src": "2009:93:20"
          },
          {
            "body": {
              "id": 4201,
              "nodeType": "Block",
              "src": "2131:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4193,
                            "name": "ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4056,
                            "src": "2158:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 4194,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2170:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2174:6:20",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2170:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4192,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "2150:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2150:31:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265737472696374656420746f2061646d696e73",
                        "id": 4197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a6d6815e3e14437e1cd16339139e1fac144f144e6b1d4ea88f322f3237e92f9",
                          "typeString": "literal_string \"Restricted to admins\""
                        },
                        "value": "Restricted to admins"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a6d6815e3e14437e1cd16339139e1fac144f144e6b1d4ea88f322f3237e92f9",
                          "typeString": "literal_string \"Restricted to admins\""
                        }
                      ],
                      "id": 4191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2142:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4199,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:64:20"
                },
                {
                  "id": 4200,
                  "nodeType": "PlaceholderStatement",
                  "src": "2217:1:20"
                }
              ]
            },
            "id": 4202,
            "name": "onlyAdmin",
            "nameLocation": "2119:9:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:2:20"
            },
            "src": "2110:116:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4214,
              "nodeType": "Block",
              "src": "2260:116:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4206,
                            "name": "MEDICAL_PRO_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4061,
                            "src": "2287:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 4207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2305:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2309:6:20",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2305:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4205,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "2279:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 4209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2279:37:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265737472696374656420746f206d65646963616c2070726f66657373696f6e616c73",
                        "id": 4210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2318:37:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f18c8b7aea12aae5fe1ad2d98d7372e25325e6f96d8b297da02bb30860cd8c9d",
                          "typeString": "literal_string \"Restricted to medical professionals\""
                        },
                        "value": "Restricted to medical professionals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f18c8b7aea12aae5fe1ad2d98d7372e25325e6f96d8b297da02bb30860cd8c9d",
                          "typeString": "literal_string \"Restricted to medical professionals\""
                        }
                      ],
                      "id": 4204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2271:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:85:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4212,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:85:20"
                },
                {
                  "id": 4213,
                  "nodeType": "PlaceholderStatement",
                  "src": "2367:1:20"
                }
              ]
            },
            "id": 4215,
            "name": "onlyMedicalPro",
            "nameLocation": "2243:14:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2257:2:20"
            },
            "src": "2234:142:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4231,
              "nodeType": "Block",
              "src": "2430:126:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                          "typeString": "enum DonorContract.VerificationStatus"
                        },
                        "id": 4226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4220,
                              "name": "donorsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4129,
                              "src": "2449:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                              }
                            },
                            "id": 4222,
                            "indexExpression": {
                              "id": 4221,
                              "name": "donorAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4217,
                              "src": "2465:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2449:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Donor_$4099_storage",
                              "typeString": "struct DonorContract.Donor storage ref"
                            }
                          },
                          "id": 4223,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2476:6:20",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4093,
                          "src": "2449:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                            "typeString": "enum DonorContract.VerificationStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4224,
                            "name": "VerificationStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4065,
                            "src": "2486:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                              "typeString": "type(enum DonorContract.VerificationStatus)"
                            }
                          },
                          "id": 4225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2505:8:20",
                          "memberName": "Verified",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4063,
                          "src": "2486:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                            "typeString": "enum DonorContract.VerificationStatus"
                          }
                        },
                        "src": "2449:64:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e6f72206e6f74207665726966696564",
                        "id": 4227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2515:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba4d56090145880e0c7abab83625bb05fceb6868c49844dcac0795061ec72907",
                          "typeString": "literal_string \"Donor not verified\""
                        },
                        "value": "Donor not verified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba4d56090145880e0c7abab83625bb05fceb6868c49844dcac0795061ec72907",
                          "typeString": "literal_string \"Donor not verified\""
                        }
                      ],
                      "id": 4219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2441:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:95:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4229,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:95:20"
                },
                {
                  "id": 4230,
                  "nodeType": "PlaceholderStatement",
                  "src": "2547:1:20"
                }
              ]
            },
            "id": 4232,
            "name": "onlyVerifiedDonor",
            "nameLocation": "2393:17:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4217,
                  "mutability": "mutable",
                  "name": "donorAddr",
                  "nameLocation": "2419:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4232,
                  "src": "2411:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2410:19:20"
            },
            "src": "2384:172:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4247,
              "nodeType": "Block",
              "src": "2578:106:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4236,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2600:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 4237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2620:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2624:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2620:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4235,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2589:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:42:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4240,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:42:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4242,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "2653:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 4243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2665:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2669:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2665:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4241,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2642:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2642:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4246,
                  "nodeType": "ExpressionStatement",
                  "src": "2642:34:20"
                }
              ]
            },
            "id": 4248,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:2:20"
            },
            "returnParameters": {
              "id": 4234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2578:0:20"
            },
            "scope": 4694,
            "src": "2564:120:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4272,
              "nodeType": "Block",
              "src": "2805:139:20",
              "statements": [
                {
                  "expression": {
                    "id": 4265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4257,
                        "name": "medicalPros",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "2816:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalProfessional_$4124_storage_$",
                          "typeString": "mapping(address => struct DonorContract.MedicalProfessional storage ref)"
                        }
                      },
                      "id": 4259,
                      "indexExpression": {
                        "id": 4258,
                        "name": "proAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4250,
                        "src": "2828:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2816:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MedicalProfessional_$4124_storage",
                        "typeString": "struct DonorContract.MedicalProfessional storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4261,
                          "name": "proAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4250,
                          "src": "2862:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4262,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4252,
                          "src": "2874:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 4263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2880:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 4260,
                        "name": "MedicalProfessional",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4124,
                        "src": "2842:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MedicalProfessional_$4124_storage_ptr_$",
                          "typeString": "type(struct DonorContract.MedicalProfessional storage pointer)"
                        }
                      },
                      "id": 4264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2842:43:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MedicalProfessional_$4124_memory_ptr",
                        "typeString": "struct DonorContract.MedicalProfessional memory"
                      }
                    },
                    "src": "2816:69:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MedicalProfessional_$4124_storage",
                      "typeString": "struct DonorContract.MedicalProfessional storage ref"
                    }
                  },
                  "id": 4266,
                  "nodeType": "ExpressionStatement",
                  "src": "2816:69:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4268,
                        "name": "MEDICAL_PRO_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4061,
                        "src": "2907:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4269,
                        "name": "proAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4250,
                        "src": "2925:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4267,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2896:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4271,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:40:20"
                }
              ]
            },
            "functionSelector": "cc1e343d",
            "id": 4273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4254,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "2795:9:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4202,
                  "src": "2795:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "2795:9:20"
              }
            ],
            "name": "addMedicalProfessional",
            "nameLocation": "2725:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4250,
                  "mutability": "mutable",
                  "name": "proAddress",
                  "nameLocation": "2756:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4273,
                  "src": "2748:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2782:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4273,
                  "src": "2768:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2747:40:20"
            },
            "returnParameters": {
              "id": 4256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2805:0:20"
            },
            "scope": 4694,
            "src": "2716:228:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4292,
              "nodeType": "Block",
              "src": "3024:108:20",
              "statements": [
                {
                  "expression": {
                    "id": 4285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4280,
                          "name": "medicalPros",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4149,
                          "src": "3035:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MedicalProfessional_$4124_storage_$",
                            "typeString": "mapping(address => struct DonorContract.MedicalProfessional storage ref)"
                          }
                        },
                        "id": 4282,
                        "indexExpression": {
                          "id": 4281,
                          "name": "proAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4275,
                          "src": "3047:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3035:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MedicalProfessional_$4124_storage",
                          "typeString": "struct DonorContract.MedicalProfessional storage ref"
                        }
                      },
                      "id": 4283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3059:6:20",
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4123,
                      "src": "3035:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3035:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4286,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:38:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4288,
                        "name": "MEDICAL_PRO_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4061,
                        "src": "3095:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4289,
                        "name": "proAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4275,
                        "src": "3113:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4287,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "3084:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3084:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4291,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:40:20"
                }
              ]
            },
            "functionSelector": "9ebfe018",
            "id": 4293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4277,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "3014:9:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4202,
                  "src": "3014:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "3014:9:20"
              }
            ],
            "name": "removeMedicalProfessional",
            "nameLocation": "2961:25:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4275,
                  "mutability": "mutable",
                  "name": "proAddress",
                  "nameLocation": "2995:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4293,
                  "src": "2987:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:20:20"
            },
            "returnParameters": {
              "id": 4279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:20"
            },
            "scope": 4694,
            "src": "2952:180:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4365,
              "nodeType": "Block",
              "src": "3359:463:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4307,
                              "name": "donorsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4129,
                              "src": "3378:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                              }
                            },
                            "id": 4310,
                            "indexExpression": {
                              "expression": {
                                "id": 4308,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3394:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3398:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3394:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3378:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Donor_$4099_storage",
                              "typeString": "struct DonorContract.Donor storage ref"
                            }
                          },
                          "id": 4311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3406:12:20",
                          "memberName": "donorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4083,
                          "src": "3378:40:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3430:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3422:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4312,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3422:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3422:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3378:54:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e6f7220616c72656164792072656769737465726564",
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3434:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f27ce177c62d4571581c398a691cfec81f77c654d1e7d9c23b5902452b04c00d",
                          "typeString": "literal_string \"Donor already registered\""
                        },
                        "value": "Donor already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f27ce177c62d4571581c398a691cfec81f77c654d1e7d9c23b5902452b04c00d",
                          "typeString": "literal_string \"Donor already registered\""
                        }
                      ],
                      "id": 4306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3370:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3370:91:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4319,
                  "nodeType": "ExpressionStatement",
                  "src": "3370:91:20"
                },
                {
                  "assignments": [
                    4322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4322,
                      "mutability": "mutable",
                      "name": "loc",
                      "nameLocation": "3488:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4365,
                      "src": "3472:19:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                        "typeString": "struct DonorContract.Location"
                      },
                      "typeName": {
                        "id": 4321,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4320,
                          "name": "Location",
                          "nameLocations": [
                            "3472:8:20"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4081,
                          "src": "3472:8:20"
                        },
                        "referencedDeclaration": 4081,
                        "src": "3472:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Location_$4081_storage_ptr",
                          "typeString": "struct DonorContract.Location"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4328,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4324,
                        "name": "city",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4299,
                        "src": "3503:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4325,
                        "name": "region",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4301,
                        "src": "3509:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4326,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4303,
                        "src": "3517:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4323,
                      "name": "Location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4081,
                      "src": "3494:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Location_$4081_storage_ptr_$",
                        "typeString": "type(struct DonorContract.Location storage pointer)"
                      }
                    },
                    "id": 4327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                      "typeString": "struct DonorContract.Location memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3472:53:20"
                },
                {
                  "assignments": [
                    4331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4331,
                      "mutability": "mutable",
                      "name": "newDonor",
                      "nameLocation": "3549:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4365,
                      "src": "3536:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donor_$4099_memory_ptr",
                        "typeString": "struct DonorContract.Donor"
                      },
                      "typeName": {
                        "id": 4330,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4329,
                          "name": "Donor",
                          "nameLocations": [
                            "3536:5:20"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4099,
                          "src": "3536:5:20"
                        },
                        "referencedDeclaration": 4099,
                        "src": "3536:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donor_$4099_storage_ptr",
                          "typeString": "struct DonorContract.Donor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4345,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3566:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3570:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3566:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4335,
                        "name": "medicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4295,
                        "src": "3578:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4336,
                        "name": "organ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4297,
                        "src": "3589:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4337,
                        "name": "loc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4322,
                        "src": "3596:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                          "typeString": "struct DonorContract.Location memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4338,
                          "name": "VerificationStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4065,
                          "src": "3601:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                            "typeString": "type(enum DonorContract.VerificationStatus)"
                          }
                        },
                        "id": 4339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3620:7:20",
                        "memberName": "Pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4062,
                        "src": "3601:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                          "typeString": "enum DonorContract.VerificationStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 4340,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3629:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3635:9:20",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3629:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4342,
                          "name": "BadgeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4074,
                          "src": "3646:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BadgeType_$4074_$",
                            "typeString": "type(enum DonorContract.BadgeType)"
                          }
                        },
                        "id": 4343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3656:4:20",
                        "memberName": "None",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4071,
                        "src": "3646:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BadgeType_$4074",
                          "typeString": "enum DonorContract.BadgeType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                          "typeString": "struct DonorContract.Location memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                          "typeString": "enum DonorContract.VerificationStatus"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_BadgeType_$4074",
                          "typeString": "enum DonorContract.BadgeType"
                        }
                      ],
                      "id": 4332,
                      "name": "Donor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4099,
                      "src": "3560:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Donor_$4099_storage_ptr_$",
                        "typeString": "type(struct DonorContract.Donor storage pointer)"
                      }
                    },
                    "id": 4344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:101:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donor_$4099_memory_ptr",
                      "typeString": "struct DonorContract.Donor memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3536:125:20"
                },
                {
                  "expression": {
                    "id": 4351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4346,
                        "name": "donorsByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4129,
                        "src": "3672:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                          "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                        }
                      },
                      "id": 4349,
                      "indexExpression": {
                        "expression": {
                          "id": 4347,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3688:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3692:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3688:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3672:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donor_$4099_storage",
                        "typeString": "struct DonorContract.Donor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4350,
                      "name": "newDonor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4331,
                      "src": "3702:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donor_$4099_memory_ptr",
                        "typeString": "struct DonorContract.Donor memory"
                      }
                    },
                    "src": "3672:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donor_$4099_storage",
                      "typeString": "struct DonorContract.Donor storage ref"
                    }
                  },
                  "id": 4352,
                  "nodeType": "ExpressionStatement",
                  "src": "3672:38:20"
                },
                {
                  "expression": {
                    "id": 4357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4353,
                        "name": "donorsByMedicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4134,
                        "src": "3721:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Donor_$4099_storage_$",
                          "typeString": "mapping(string memory => struct DonorContract.Donor storage ref)"
                        }
                      },
                      "id": 4355,
                      "indexExpression": {
                        "id": 4354,
                        "name": "medicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4295,
                        "src": "3739:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3721:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donor_$4099_storage",
                        "typeString": "struct DonorContract.Donor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4356,
                      "name": "newDonor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4331,
                      "src": "3752:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donor_$4099_memory_ptr",
                        "typeString": "struct DonorContract.Donor memory"
                      }
                    },
                    "src": "3721:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donor_$4099_storage",
                      "typeString": "struct DonorContract.Donor storage ref"
                    }
                  },
                  "id": 4358,
                  "nodeType": "ExpressionStatement",
                  "src": "3721:39:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4360,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3792:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3796:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3792:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4362,
                        "name": "medicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4295,
                        "src": "3804:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4359,
                      "name": "DonorRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4159,
                      "src": "3776:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 4363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3776:38:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4364,
                  "nodeType": "EmitStatement",
                  "src": "3771:43:20"
                }
              ]
            },
            "functionSelector": "1414f2fd",
            "id": 4366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDonor",
            "nameLocation": "3180:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4295,
                  "mutability": "mutable",
                  "name": "medicalID",
                  "nameLocation": "3213:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4366,
                  "src": "3199:23:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4297,
                  "mutability": "mutable",
                  "name": "organ",
                  "nameLocation": "3247:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4366,
                  "src": "3233:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4299,
                  "mutability": "mutable",
                  "name": "city",
                  "nameLocation": "3277:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4366,
                  "src": "3263:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4298,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4301,
                  "mutability": "mutable",
                  "name": "region",
                  "nameLocation": "3306:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4366,
                  "src": "3292:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4300,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4303,
                  "mutability": "mutable",
                  "name": "country",
                  "nameLocation": "3337:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4366,
                  "src": "3323:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3323:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:163:20"
            },
            "returnParameters": {
              "id": 4305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3359:0:20"
            },
            "scope": 4694,
            "src": "3171:651:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4440,
              "nodeType": "Block",
              "src": "4057:484:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4383,
                              "name": "patientsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "4076:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                              }
                            },
                            "id": 4386,
                            "indexExpression": {
                              "expression": {
                                "id": 4384,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4094:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4098:6:20",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4094:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4076:29:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$4117_storage",
                              "typeString": "struct DonorContract.Patient storage ref"
                            }
                          },
                          "id": 4387,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4106:14:20",
                          "memberName": "patientAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4101,
                          "src": "4076:44:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4132:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4124:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4388,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4124:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4124:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4076:58:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e7420616c72656164792072656769737465726564",
                        "id": 4393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4136:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0",
                          "typeString": "literal_string \"Patient already registered\""
                        },
                        "value": "Patient already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39964dd4ab745112952693f060791e679669e0677a04eb4aa71bca4732419ad0",
                          "typeString": "literal_string \"Patient already registered\""
                        }
                      ],
                      "id": 4382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4068:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:97:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4395,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:97:20"
                },
                {
                  "assignments": [
                    4398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4398,
                      "mutability": "mutable",
                      "name": "loc",
                      "nameLocation": "4192:3:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4440,
                      "src": "4176:19:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                        "typeString": "struct DonorContract.Location"
                      },
                      "typeName": {
                        "id": 4397,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4396,
                          "name": "Location",
                          "nameLocations": [
                            "4176:8:20"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4081,
                          "src": "4176:8:20"
                        },
                        "referencedDeclaration": 4081,
                        "src": "4176:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Location_$4081_storage_ptr",
                          "typeString": "struct DonorContract.Location"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4404,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4400,
                        "name": "city",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4372,
                        "src": "4207:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4401,
                        "name": "region",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4374,
                        "src": "4213:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4402,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4376,
                        "src": "4221:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4399,
                      "name": "Location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4081,
                      "src": "4198:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Location_$4081_storage_ptr_$",
                        "typeString": "type(struct DonorContract.Location storage pointer)"
                      }
                    },
                    "id": 4403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4198:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                      "typeString": "struct DonorContract.Location memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4176:53:20"
                },
                {
                  "assignments": [
                    4407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4407,
                      "mutability": "mutable",
                      "name": "newPatient",
                      "nameLocation": "4255:10:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 4440,
                      "src": "4240:25:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$4117_memory_ptr",
                        "typeString": "struct DonorContract.Patient"
                      },
                      "typeName": {
                        "id": 4406,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4405,
                          "name": "Patient",
                          "nameLocations": [
                            "4240:7:20"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4117,
                          "src": "4240:7:20"
                        },
                        "referencedDeclaration": 4117,
                        "src": "4240:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$4117_storage_ptr",
                          "typeString": "struct DonorContract.Patient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4420,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4409,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4276:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4280:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4276:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4411,
                        "name": "medicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4368,
                        "src": "4288:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4412,
                        "name": "organNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "4299:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4413,
                        "name": "loc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4398,
                        "src": "4312:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                          "typeString": "struct DonorContract.Location memory"
                        }
                      },
                      {
                        "id": 4414,
                        "name": "urgency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "4317:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UrgencyLevel_$4070",
                          "typeString": "enum DonorContract.UrgencyLevel"
                        }
                      },
                      {
                        "expression": {
                          "id": 4415,
                          "name": "VerificationStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4065,
                          "src": "4326:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                            "typeString": "type(enum DonorContract.VerificationStatus)"
                          }
                        },
                        "id": 4416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4345:7:20",
                        "memberName": "Pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4062,
                        "src": "4326:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                          "typeString": "enum DonorContract.VerificationStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 4417,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4354:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4360:9:20",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4354:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Location_$4081_memory_ptr",
                          "typeString": "struct DonorContract.Location memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_UrgencyLevel_$4070",
                          "typeString": "enum DonorContract.UrgencyLevel"
                        },
                        {
                          "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                          "typeString": "enum DonorContract.VerificationStatus"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4408,
                      "name": "Patient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4117,
                      "src": "4268:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Patient_$4117_storage_ptr_$",
                        "typeString": "type(struct DonorContract.Patient storage pointer)"
                      }
                    },
                    "id": 4419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4268:102:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$4117_memory_ptr",
                      "typeString": "struct DonorContract.Patient memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4240:130:20"
                },
                {
                  "expression": {
                    "id": 4426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4421,
                        "name": "patientsByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "4381:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                          "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                        }
                      },
                      "id": 4424,
                      "indexExpression": {
                        "expression": {
                          "id": 4422,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4399:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4403:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4399:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4381:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$4117_storage",
                        "typeString": "struct DonorContract.Patient storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4425,
                      "name": "newPatient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4407,
                      "src": "4413:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$4117_memory_ptr",
                        "typeString": "struct DonorContract.Patient memory"
                      }
                    },
                    "src": "4381:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$4117_storage",
                      "typeString": "struct DonorContract.Patient storage ref"
                    }
                  },
                  "id": 4427,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:42:20"
                },
                {
                  "expression": {
                    "id": 4432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4428,
                        "name": "patientsByMedicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4144,
                        "src": "4434:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$4117_storage_$",
                          "typeString": "mapping(string memory => struct DonorContract.Patient storage ref)"
                        }
                      },
                      "id": 4430,
                      "indexExpression": {
                        "id": 4429,
                        "name": "medicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4368,
                        "src": "4454:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4434:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$4117_storage",
                        "typeString": "struct DonorContract.Patient storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4431,
                      "name": "newPatient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4407,
                      "src": "4467:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$4117_memory_ptr",
                        "typeString": "struct DonorContract.Patient memory"
                      }
                    },
                    "src": "4434:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$4117_storage",
                      "typeString": "struct DonorContract.Patient storage ref"
                    }
                  },
                  "id": 4433,
                  "nodeType": "ExpressionStatement",
                  "src": "4434:43:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4511:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4515:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4511:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4437,
                        "name": "medicalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4368,
                        "src": "4523:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4434,
                      "name": "PatientRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4165,
                      "src": "4493:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 4438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4493:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4439,
                  "nodeType": "EmitStatement",
                  "src": "4488:45:20"
                }
              ]
            },
            "functionSelector": "e58f0227",
            "id": 4441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPatient",
            "nameLocation": "3839:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4368,
                  "mutability": "mutable",
                  "name": "medicalID",
                  "nameLocation": "3874:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4441,
                  "src": "3860:23:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4367,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3860:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4370,
                  "mutability": "mutable",
                  "name": "organNeeded",
                  "nameLocation": "3908:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4441,
                  "src": "3894:25:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4372,
                  "mutability": "mutable",
                  "name": "city",
                  "nameLocation": "3944:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4441,
                  "src": "3930:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4371,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4374,
                  "mutability": "mutable",
                  "name": "region",
                  "nameLocation": "3973:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4441,
                  "src": "3959:20:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4373,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4376,
                  "mutability": "mutable",
                  "name": "country",
                  "nameLocation": "4004:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4441,
                  "src": "3990:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4375,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4379,
                  "mutability": "mutable",
                  "name": "urgency",
                  "nameLocation": "4035:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4441,
                  "src": "4022:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UrgencyLevel_$4070",
                    "typeString": "enum DonorContract.UrgencyLevel"
                  },
                  "typeName": {
                    "id": 4378,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4377,
                      "name": "UrgencyLevel",
                      "nameLocations": [
                        "4022:12:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4070,
                      "src": "4022:12:20"
                    },
                    "referencedDeclaration": 4070,
                    "src": "4022:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UrgencyLevel_$4070",
                      "typeString": "enum DonorContract.UrgencyLevel"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3849:200:20"
            },
            "returnParameters": {
              "id": 4381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4057:0:20"
            },
            "scope": 4694,
            "src": "3830:711:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4484,
              "nodeType": "Block",
              "src": "4642:317:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4449,
                              "name": "donorsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4129,
                              "src": "4661:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                              }
                            },
                            "id": 4451,
                            "indexExpression": {
                              "id": 4450,
                              "name": "donorAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4443,
                              "src": "4677:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4661:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Donor_$4099_storage",
                              "typeString": "struct DonorContract.Donor storage ref"
                            }
                          },
                          "id": 4452,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4688:12:20",
                          "memberName": "donorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4083,
                          "src": "4661:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4712:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4704:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4704:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4704:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4661:53:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e6f72206e6f7420666f756e64",
                        "id": 4458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4716:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87602ebee3f23d881152a04e7e02cf80389d494169661d74f9f4f410da7ca9ab",
                          "typeString": "literal_string \"Donor not found\""
                        },
                        "value": "Donor not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87602ebee3f23d881152a04e7e02cf80389d494169661d74f9f4f410da7ca9ab",
                          "typeString": "literal_string \"Donor not found\""
                        }
                      ],
                      "id": 4448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4653:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4460,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:81:20"
                },
                {
                  "expression": {
                    "id": 4467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4461,
                          "name": "donorsByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4129,
                          "src": "4745:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                            "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                          }
                        },
                        "id": 4463,
                        "indexExpression": {
                          "id": 4462,
                          "name": "donorAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4443,
                          "src": "4761:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4745:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donor_$4099_storage",
                          "typeString": "struct DonorContract.Donor storage ref"
                        }
                      },
                      "id": 4464,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4772:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4093,
                      "src": "4745:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4465,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "4781:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4800:8:20",
                      "memberName": "Verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4063,
                      "src": "4781:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "4745:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4468,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:63:20"
                },
                {
                  "expression": {
                    "id": 4478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4469,
                          "name": "donorsByMedicalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4134,
                          "src": "4819:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Donor_$4099_storage_$",
                            "typeString": "mapping(string memory => struct DonorContract.Donor storage ref)"
                          }
                        },
                        "id": 4474,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4470,
                              "name": "donorsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4129,
                              "src": "4837:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                              }
                            },
                            "id": 4472,
                            "indexExpression": {
                              "id": 4471,
                              "name": "donorAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4443,
                              "src": "4853:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4837:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Donor_$4099_storage",
                              "typeString": "struct DonorContract.Donor storage ref"
                            }
                          },
                          "id": 4473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4864:9:20",
                          "memberName": "medicalID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4085,
                          "src": "4837:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4819:55:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donor_$4099_storage",
                          "typeString": "struct DonorContract.Donor storage ref"
                        }
                      },
                      "id": 4475,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4875:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4093,
                      "src": "4819:62:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4476,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "4884:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4903:8:20",
                      "memberName": "Verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4063,
                      "src": "4884:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "4819:92:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4479,
                  "nodeType": "ExpressionStatement",
                  "src": "4819:92:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4481,
                        "name": "donorAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4443,
                        "src": "4941:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4480,
                      "name": "DonorVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4169,
                      "src": "4927:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4927:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4483,
                  "nodeType": "EmitStatement",
                  "src": "4922:29:20"
                }
              ]
            },
            "functionSelector": "506af7e2",
            "id": 4485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4446,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4445,
                  "name": "onlyMedicalPro",
                  "nameLocations": [
                    "4627:14:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4215,
                  "src": "4627:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "4627:14:20"
              }
            ],
            "name": "verifyDonor",
            "nameLocation": "4589:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4443,
                  "mutability": "mutable",
                  "name": "donorAddr",
                  "nameLocation": "4609:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4485,
                  "src": "4601:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4601:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4600:19:20"
            },
            "returnParameters": {
              "id": 4447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4642:0:20"
            },
            "scope": 4694,
            "src": "4580:379:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4528,
              "nodeType": "Block",
              "src": "5033:339:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4493,
                              "name": "patientsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "5052:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                              }
                            },
                            "id": 4495,
                            "indexExpression": {
                              "id": 4494,
                              "name": "patientAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4487,
                              "src": "5070:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5052:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$4117_storage",
                              "typeString": "struct DonorContract.Patient storage ref"
                            }
                          },
                          "id": 4496,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5083:14:20",
                          "memberName": "patientAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4101,
                          "src": "5052:45:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5109:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5101:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4497,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5101:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5101:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5052:59:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e74206e6f7420666f756e64",
                        "id": 4502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5113:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571",
                          "typeString": "literal_string \"Patient not found\""
                        },
                        "value": "Patient not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571",
                          "typeString": "literal_string \"Patient not found\""
                        }
                      ],
                      "id": 4492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5044:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:89:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4504,
                  "nodeType": "ExpressionStatement",
                  "src": "5044:89:20"
                },
                {
                  "expression": {
                    "id": 4511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4505,
                          "name": "patientsByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4139,
                          "src": "5144:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                            "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                          }
                        },
                        "id": 4507,
                        "indexExpression": {
                          "id": 4506,
                          "name": "patientAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4487,
                          "src": "5162:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5144:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$4117_storage",
                          "typeString": "struct DonorContract.Patient storage ref"
                        }
                      },
                      "id": 4508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5175:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4114,
                      "src": "5144:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4509,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "5184:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5203:8:20",
                      "memberName": "Verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4063,
                      "src": "5184:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "5144:67:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4512,
                  "nodeType": "ExpressionStatement",
                  "src": "5144:67:20"
                },
                {
                  "expression": {
                    "id": 4522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4513,
                          "name": "patientsByMedicalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4144,
                          "src": "5222:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$4117_storage_$",
                            "typeString": "mapping(string memory => struct DonorContract.Patient storage ref)"
                          }
                        },
                        "id": 4518,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4514,
                              "name": "patientsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "5242:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                              }
                            },
                            "id": 4516,
                            "indexExpression": {
                              "id": 4515,
                              "name": "patientAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4487,
                              "src": "5260:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5242:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$4117_storage",
                              "typeString": "struct DonorContract.Patient storage ref"
                            }
                          },
                          "id": 4517,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5273:9:20",
                          "memberName": "medicalID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4103,
                          "src": "5242:40:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5222:61:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$4117_storage",
                          "typeString": "struct DonorContract.Patient storage ref"
                        }
                      },
                      "id": 4519,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5284:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4114,
                      "src": "5222:68:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4520,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "5293:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5312:8:20",
                      "memberName": "Verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4063,
                      "src": "5293:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "5222:98:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4523,
                  "nodeType": "ExpressionStatement",
                  "src": "5222:98:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4525,
                        "name": "patientAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4487,
                        "src": "5352:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4524,
                      "name": "PatientVerified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4173,
                      "src": "5336:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5336:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4527,
                  "nodeType": "EmitStatement",
                  "src": "5331:33:20"
                }
              ]
            },
            "functionSelector": "c756d5a7",
            "id": 4529,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4489,
                  "name": "onlyMedicalPro",
                  "nameLocations": [
                    "5018:14:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4215,
                  "src": "5018:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5018:14:20"
              }
            ],
            "name": "verifyPatient",
            "nameLocation": "4976:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4487,
                  "mutability": "mutable",
                  "name": "patientAddr",
                  "nameLocation": "4998:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4529,
                  "src": "4990:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4990:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4989:21:20"
            },
            "returnParameters": {
              "id": 4491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5033:0:20"
            },
            "scope": 4694,
            "src": "4967:405:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4572,
              "nodeType": "Block",
              "src": "5470:317:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4537,
                              "name": "donorsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4129,
                              "src": "5489:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                              }
                            },
                            "id": 4539,
                            "indexExpression": {
                              "id": 4538,
                              "name": "donorAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4531,
                              "src": "5505:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5489:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Donor_$4099_storage",
                              "typeString": "struct DonorContract.Donor storage ref"
                            }
                          },
                          "id": 4540,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5516:12:20",
                          "memberName": "donorAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4083,
                          "src": "5489:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5540:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5532:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5532:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5532:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5489:53:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e6f72206e6f7420666f756e64",
                        "id": 4546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5544:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87602ebee3f23d881152a04e7e02cf80389d494169661d74f9f4f410da7ca9ab",
                          "typeString": "literal_string \"Donor not found\""
                        },
                        "value": "Donor not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87602ebee3f23d881152a04e7e02cf80389d494169661d74f9f4f410da7ca9ab",
                          "typeString": "literal_string \"Donor not found\""
                        }
                      ],
                      "id": 4536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5481:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5481:81:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4548,
                  "nodeType": "ExpressionStatement",
                  "src": "5481:81:20"
                },
                {
                  "expression": {
                    "id": 4555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4549,
                          "name": "donorsByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4129,
                          "src": "5573:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                            "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                          }
                        },
                        "id": 4551,
                        "indexExpression": {
                          "id": 4550,
                          "name": "donorAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4531,
                          "src": "5589:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5573:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donor_$4099_storage",
                          "typeString": "struct DonorContract.Donor storage ref"
                        }
                      },
                      "id": 4552,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5600:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4093,
                      "src": "5573:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4553,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "5609:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5628:8:20",
                      "memberName": "Rejected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4064,
                      "src": "5609:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "5573:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4556,
                  "nodeType": "ExpressionStatement",
                  "src": "5573:63:20"
                },
                {
                  "expression": {
                    "id": 4566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4557,
                          "name": "donorsByMedicalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4134,
                          "src": "5647:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Donor_$4099_storage_$",
                            "typeString": "mapping(string memory => struct DonorContract.Donor storage ref)"
                          }
                        },
                        "id": 4562,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4558,
                              "name": "donorsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4129,
                              "src": "5665:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                              }
                            },
                            "id": 4560,
                            "indexExpression": {
                              "id": 4559,
                              "name": "donorAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4531,
                              "src": "5681:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5665:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Donor_$4099_storage",
                              "typeString": "struct DonorContract.Donor storage ref"
                            }
                          },
                          "id": 4561,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5692:9:20",
                          "memberName": "medicalID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4085,
                          "src": "5665:36:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5647:55:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donor_$4099_storage",
                          "typeString": "struct DonorContract.Donor storage ref"
                        }
                      },
                      "id": 4563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5703:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4093,
                      "src": "5647:62:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4564,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "5712:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5731:8:20",
                      "memberName": "Rejected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4064,
                      "src": "5712:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "5647:92:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4567,
                  "nodeType": "ExpressionStatement",
                  "src": "5647:92:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4569,
                        "name": "donorAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "5769:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4568,
                      "name": "DonorRejected",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4177,
                      "src": "5755:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4571,
                  "nodeType": "EmitStatement",
                  "src": "5750:29:20"
                }
              ]
            },
            "functionSelector": "a74f0920",
            "id": 4573,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4534,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4533,
                  "name": "onlyMedicalPro",
                  "nameLocations": [
                    "5455:14:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4215,
                  "src": "5455:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5455:14:20"
              }
            ],
            "name": "rejectDonor",
            "nameLocation": "5417:11:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4531,
                  "mutability": "mutable",
                  "name": "donorAddr",
                  "nameLocation": "5437:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4573,
                  "src": "5429:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5429:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5428:19:20"
            },
            "returnParameters": {
              "id": 4535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5470:0:20"
            },
            "scope": 4694,
            "src": "5408:379:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4616,
              "nodeType": "Block",
              "src": "5861:339:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4581,
                              "name": "patientsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "5880:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                              }
                            },
                            "id": 4583,
                            "indexExpression": {
                              "id": 4582,
                              "name": "patientAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4575,
                              "src": "5898:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5880:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$4117_storage",
                              "typeString": "struct DonorContract.Patient storage ref"
                            }
                          },
                          "id": 4584,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5911:14:20",
                          "memberName": "patientAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4101,
                          "src": "5880:45:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5937:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5929:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4585,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5929:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5929:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5880:59:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617469656e74206e6f7420666f756e64",
                        "id": 4590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5941:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571",
                          "typeString": "literal_string \"Patient not found\""
                        },
                        "value": "Patient not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79ce62d7220f73dea0dc2c9bb95d6143420225d311d28b04d8fae31c4aacf571",
                          "typeString": "literal_string \"Patient not found\""
                        }
                      ],
                      "id": 4580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5872:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5872:89:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4592,
                  "nodeType": "ExpressionStatement",
                  "src": "5872:89:20"
                },
                {
                  "expression": {
                    "id": 4599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4593,
                          "name": "patientsByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4139,
                          "src": "5972:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                            "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                          }
                        },
                        "id": 4595,
                        "indexExpression": {
                          "id": 4594,
                          "name": "patientAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4575,
                          "src": "5990:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5972:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$4117_storage",
                          "typeString": "struct DonorContract.Patient storage ref"
                        }
                      },
                      "id": 4596,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6003:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4114,
                      "src": "5972:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4597,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "6012:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6031:8:20",
                      "memberName": "Rejected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4064,
                      "src": "6012:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "5972:67:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4600,
                  "nodeType": "ExpressionStatement",
                  "src": "5972:67:20"
                },
                {
                  "expression": {
                    "id": 4610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4601,
                          "name": "patientsByMedicalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4144,
                          "src": "6050:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Patient_$4117_storage_$",
                            "typeString": "mapping(string memory => struct DonorContract.Patient storage ref)"
                          }
                        },
                        "id": 4606,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4602,
                              "name": "patientsByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "6070:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                                "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                              }
                            },
                            "id": 4604,
                            "indexExpression": {
                              "id": 4603,
                              "name": "patientAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4575,
                              "src": "6088:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6070:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patient_$4117_storage",
                              "typeString": "struct DonorContract.Patient storage ref"
                            }
                          },
                          "id": 4605,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6101:9:20",
                          "memberName": "medicalID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4103,
                          "src": "6070:40:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6050:61:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$4117_storage",
                          "typeString": "struct DonorContract.Patient storage ref"
                        }
                      },
                      "id": 4607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6112:6:20",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4114,
                      "src": "6050:68:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4608,
                        "name": "VerificationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4065,
                        "src": "6121:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VerificationStatus_$4065_$",
                          "typeString": "type(enum DonorContract.VerificationStatus)"
                        }
                      },
                      "id": 4609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6140:8:20",
                      "memberName": "Rejected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4064,
                      "src": "6121:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                        "typeString": "enum DonorContract.VerificationStatus"
                      }
                    },
                    "src": "6050:98:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VerificationStatus_$4065",
                      "typeString": "enum DonorContract.VerificationStatus"
                    }
                  },
                  "id": 4611,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:98:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4613,
                        "name": "patientAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4575,
                        "src": "6180:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4612,
                      "name": "PatientRejected",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4181,
                      "src": "6164:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4615,
                  "nodeType": "EmitStatement",
                  "src": "6159:33:20"
                }
              ]
            },
            "functionSelector": "2c9365fa",
            "id": 4617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4577,
                  "name": "onlyMedicalPro",
                  "nameLocations": [
                    "5846:14:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4215,
                  "src": "5846:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5846:14:20"
              }
            ],
            "name": "rejectPatient",
            "nameLocation": "5804:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4575,
                  "mutability": "mutable",
                  "name": "patientAddr",
                  "nameLocation": "5826:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4617,
                  "src": "5818:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5817:21:20"
            },
            "returnParameters": {
              "id": 4579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5861:0:20"
            },
            "scope": 4694,
            "src": "5795:405:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4660,
              "nodeType": "Block",
              "src": "6366:205:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4629,
                            "name": "organs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4620,
                            "src": "6385:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 4630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6392:6:20",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6385:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4631,
                            "name": "times",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4623,
                            "src": "6402:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6408:6:20",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6402:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6385:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417272617973206c656e677468206d69736d61746368",
                        "id": 4634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6416:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                          "typeString": "literal_string \"Arrays length mismatch\""
                        },
                        "value": "Arrays length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
                          "typeString": "literal_string \"Arrays length mismatch\""
                        }
                      ],
                      "id": 4628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6377:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6377:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4636,
                  "nodeType": "ExpressionStatement",
                  "src": "6377:64:20"
                },
                {
                  "body": {
                    "id": 4658,
                    "nodeType": "Block",
                    "src": "6496:68:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 4656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4648,
                              "name": "organViabilityTimes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4153,
                              "src": "6511:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 4652,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 4649,
                                "name": "organs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4620,
                                "src": "6531:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 4651,
                              "indexExpression": {
                                "id": 4650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4638,
                                "src": "6538:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6531:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6511:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 4653,
                              "name": "times",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4623,
                              "src": "6544:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4655,
                            "indexExpression": {
                              "id": 4654,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4638,
                              "src": "6550:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6544:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6511:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4657,
                        "nodeType": "ExpressionStatement",
                        "src": "6511:41:20"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4641,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4638,
                      "src": "6472:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4642,
                        "name": "organs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4620,
                        "src": "6476:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 4643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6483:6:20",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6476:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6472:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4659,
                  "initializationExpression": {
                    "assignments": [
                      4638
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4638,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6465:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 4659,
                        "src": "6457:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6457:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4640,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6469:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6457:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6491:3:20",
                      "subExpression": {
                        "id": 4645,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4638,
                        "src": "6491:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4647,
                    "nodeType": "ExpressionStatement",
                    "src": "6491:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "6452:112:20"
                }
              ]
            },
            "functionSelector": "26a9c754",
            "id": 4661,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4626,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4625,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "6356:9:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4202,
                  "src": "6356:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "6356:9:20"
              }
            ],
            "name": "initializeOrganViabilityTimes",
            "nameLocation": "6271:29:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4620,
                  "mutability": "mutable",
                  "name": "organs",
                  "nameLocation": "6317:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4661,
                  "src": "6301:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4618,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6301:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 4619,
                    "nodeType": "ArrayTypeName",
                    "src": "6301:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4623,
                  "mutability": "mutable",
                  "name": "times",
                  "nameLocation": "6342:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4661,
                  "src": "6325:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4621,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6325:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4622,
                    "nodeType": "ArrayTypeName",
                    "src": "6325:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6300:48:20"
            },
            "returnParameters": {
              "id": 4627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:20"
            },
            "scope": 4694,
            "src": "6262:309:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4673,
              "nodeType": "Block",
              "src": "6676:52:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4669,
                      "name": "donorsByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4129,
                      "src": "6694:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donor_$4099_storage_$",
                        "typeString": "mapping(address => struct DonorContract.Donor storage ref)"
                      }
                    },
                    "id": 4671,
                    "indexExpression": {
                      "id": 4670,
                      "name": "donorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4663,
                      "src": "6710:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6694:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donor_$4099_storage",
                      "typeString": "struct DonorContract.Donor storage ref"
                    }
                  },
                  "functionReturnParameters": 4668,
                  "id": 4672,
                  "nodeType": "Return",
                  "src": "6687:33:20"
                }
              ]
            },
            "functionSelector": "2cc5329a",
            "id": 4674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDonorByAddress",
            "nameLocation": "6604:17:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4663,
                  "mutability": "mutable",
                  "name": "donorAddr",
                  "nameLocation": "6630:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "6622:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6622:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6621:19:20"
            },
            "returnParameters": {
              "id": 4668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "6662:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Donor_$4099_memory_ptr",
                    "typeString": "struct DonorContract.Donor"
                  },
                  "typeName": {
                    "id": 4666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4665,
                      "name": "Donor",
                      "nameLocations": [
                        "6662:5:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4099,
                      "src": "6662:5:20"
                    },
                    "referencedDeclaration": 4099,
                    "src": "6662:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donor_$4099_storage_ptr",
                      "typeString": "struct DonorContract.Donor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6661:14:20"
            },
            "scope": 4694,
            "src": "6595:133:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4686,
              "nodeType": "Block",
              "src": "6823:56:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4682,
                      "name": "patientsByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4139,
                      "src": "6841:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$4117_storage_$",
                        "typeString": "mapping(address => struct DonorContract.Patient storage ref)"
                      }
                    },
                    "id": 4684,
                    "indexExpression": {
                      "id": 4683,
                      "name": "patientAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4676,
                      "src": "6859:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6841:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$4117_storage",
                      "typeString": "struct DonorContract.Patient storage ref"
                    }
                  },
                  "functionReturnParameters": 4681,
                  "id": 4685,
                  "nodeType": "Return",
                  "src": "6834:37:20"
                }
              ]
            },
            "functionSelector": "ba5c0335",
            "id": 4687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPatientByAddress",
            "nameLocation": "6745:19:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4676,
                  "mutability": "mutable",
                  "name": "patientAddr",
                  "nameLocation": "6773:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 4687,
                  "src": "6765:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6765:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6764:21:20"
            },
            "returnParameters": {
              "id": 4681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4687,
                  "src": "6807:14:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Patient_$4117_memory_ptr",
                    "typeString": "struct DonorContract.Patient"
                  },
                  "typeName": {
                    "id": 4679,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4678,
                      "name": "Patient",
                      "nameLocations": [
                        "6807:7:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4117,
                      "src": "6807:7:20"
                    },
                    "referencedDeclaration": 4117,
                    "src": "6807:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$4117_storage_ptr",
                      "typeString": "struct DonorContract.Patient"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6806:16:20"
            },
            "scope": 4694,
            "src": "6736:143:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4692,
              "nodeType": "Block",
              "src": "7001:533:20",
              "statements": []
            },
            "functionSelector": "4959a52f",
            "id": 4693,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4689,
                  "name": "onlyMedicalPro",
                  "nameLocations": [
                    "6986:14:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4215,
                  "src": "6986:14:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "6986:14:20"
              }
            ],
            "name": "matchDonorsAndPatients",
            "nameLocation": "6954:22:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6976:2:20"
            },
            "returnParameters": {
              "id": 4691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7001:0:20"
            },
            "scope": 4694,
            "src": "6945:589:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4695,
        "src": "122:7556:20",
        "usedErrors": [],
        "usedEvents": [
          327,
          336,
          345,
          4159,
          4165,
          4169,
          4173,
          4177,
          4181,
          4189
        ]
      }
    ],
    "src": "33:7647:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "1746897080605": {
      "events": {},
      "links": {},
      "address": "0x11820c7Df6b19B8525B0C6cE022343a202D9188a",
      "transactionHash": "0x14edce199170c5e41069ef78fcb946d659baafbbd667aed87ab06e9f09037136"
    },
    "1746956852519": {
      "events": {},
      "links": {},
      "address": "0xA566C7F891ad45A10353Aa4a4EE049BEf107bDd1",
      "transactionHash": "0xe31f978a66e2d38d8d5a5830728d824e6f638affb8648e369af60cd6d76b226b"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-11T10:03:54.533Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}